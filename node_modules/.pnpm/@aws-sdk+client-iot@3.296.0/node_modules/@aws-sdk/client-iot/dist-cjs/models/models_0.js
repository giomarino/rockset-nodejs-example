"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConflictException = exports.TargetSelection = exports.JobEndBehavior = exports.RetryableFailureType = exports.InvalidAggregationException = exports.IndexNotReadyException = exports.FleetMetricUnit = exports.InvalidQueryException = exports.ServiceType = exports.CertificateValidationException = exports.DimensionType = exports.CustomMetricType = exports.ResourceAlreadyExistsException = exports.InternalException = exports.ConflictingResourceUpdateException = exports.InvalidStateTransitionException = exports.AutoRegistrationStatus = exports.AuthorizerStatus = exports.AuthDecision = exports.AuditTaskType = exports.AuditTaskStatus = exports.AuditNotificationType = exports.AuditMitigationActionsTaskStatus = exports.AuditMitigationActionsExecutionStatus = exports.AuditFrequency = exports.AuditFindingSeverity = exports.ResourceType = exports.AuditCheckRunStatus = exports.VersionConflictException = exports.LimitExceededException = exports.AlertTargetType = exports.AggregationTypeName = exports.VerificationState = exports.DimensionValueOperator = exports.ConfidenceLevel = exports.ComparisonOperator = exports.ActionType = exports.MessageFormat = exports.CannedAccessControlList = exports.AssetPropertyVariant = exports.DynamoKeyType = exports.UnauthorizedException = exports.TransferAlreadyCompletedException = exports.ThrottlingException = exports.ServiceUnavailableException = exports.ResourceNotFoundException = exports.InvalidRequestException = exports.InternalFailureException = exports.JobExecutionFailureType = exports.AbortAction = void 0;
exports.SnsActionFilterSensitiveLog = exports.SalesforceActionFilterSensitiveLog = exports.S3ActionFilterSensitiveLog = exports.RepublishActionFilterSensitiveLog = exports.MqttHeadersFilterSensitiveLog = exports.UserPropertyFilterSensitiveLog = exports.OpenSearchActionFilterSensitiveLog = exports.LocationActionFilterSensitiveLog = exports.LocationTimestampFilterSensitiveLog = exports.LambdaActionFilterSensitiveLog = exports.KinesisActionFilterSensitiveLog = exports.KafkaActionFilterSensitiveLog = exports.IotSiteWiseActionFilterSensitiveLog = exports.PutAssetPropertyValueEntryFilterSensitiveLog = exports.AssetPropertyValueFilterSensitiveLog = exports.AssetPropertyVariantFilterSensitiveLog = exports.AssetPropertyTimestampFilterSensitiveLog = exports.IotEventsActionFilterSensitiveLog = exports.IotAnalyticsActionFilterSensitiveLog = exports.HttpActionFilterSensitiveLog = exports.HttpActionHeaderFilterSensitiveLog = exports.HttpAuthorizationFilterSensitiveLog = exports.SigV4AuthorizationFilterSensitiveLog = exports.FirehoseActionFilterSensitiveLog = exports.ElasticsearchActionFilterSensitiveLog = exports.DynamoDBv2ActionFilterSensitiveLog = exports.PutItemInputFilterSensitiveLog = exports.DynamoDBActionFilterSensitiveLog = exports.CloudwatchMetricActionFilterSensitiveLog = exports.CloudwatchLogsActionFilterSensitiveLog = exports.CloudwatchAlarmActionFilterSensitiveLog = exports.AcceptCertificateTransferRequestFilterSensitiveLog = exports.AbortConfigFilterSensitiveLog = exports.AbortCriteriaFilterSensitiveLog = exports.CertificateStateException = exports.DeleteConflictException = exports.TopicRuleDestinationStatus = exports.SqlParseException = exports.DayOfWeek = exports.TemplateType = exports.VersionsLimitExceededException = exports.MalformedPolicyException = exports.OTAUpdateStatus = exports.Protocol = exports.AwsJobAbortCriteriaFailureType = exports.AwsJobAbortCriteriaAbortAction = exports.DeviceCertificateUpdateAction = exports.CACertificateUpdateAction = exports.PolicyTemplateName = exports.LogLevel = void 0;
exports.AuthorizerConfigFilterSensitiveLog = exports.AuthInfoFilterSensitiveLog = exports.AuditTaskMetadataFilterSensitiveLog = exports.AuditSuppressionFilterSensitiveLog = exports.AuditNotificationTargetFilterSensitiveLog = exports.AuditMitigationActionsTaskTargetFilterSensitiveLog = exports.TaskStatisticsForAuditCheckFilterSensitiveLog = exports.AuditMitigationActionsTaskMetadataFilterSensitiveLog = exports.AuditMitigationActionExecutionMetadataFilterSensitiveLog = exports.AuditFindingFilterSensitiveLog = exports.RelatedResourceFilterSensitiveLog = exports.NonCompliantResourceFilterSensitiveLog = exports.ResourceIdentifierFilterSensitiveLog = exports.PolicyVersionIdentifierFilterSensitiveLog = exports.IssuerCertificateIdentifierFilterSensitiveLog = exports.AuditCheckDetailsFilterSensitiveLog = exports.AuditCheckConfigurationFilterSensitiveLog = exports.AttributePayloadFilterSensitiveLog = exports.AttachThingPrincipalResponseFilterSensitiveLog = exports.AttachThingPrincipalRequestFilterSensitiveLog = exports.AttachSecurityProfileResponseFilterSensitiveLog = exports.AttachSecurityProfileRequestFilterSensitiveLog = exports.AttachPrincipalPolicyRequestFilterSensitiveLog = exports.AttachPolicyRequestFilterSensitiveLog = exports.AssociateTargetsWithJobResponseFilterSensitiveLog = exports.AssociateTargetsWithJobRequestFilterSensitiveLog = exports.AllowedFilterSensitiveLog = exports.PolicyFilterSensitiveLog = exports.AlertTargetFilterSensitiveLog = exports.AggregationTypeFilterSensitiveLog = exports.AddThingToThingGroupResponseFilterSensitiveLog = exports.AddThingToThingGroupRequestFilterSensitiveLog = exports.AddThingToBillingGroupResponseFilterSensitiveLog = exports.AddThingToBillingGroupRequestFilterSensitiveLog = exports.AddThingsToThingGroupParamsFilterSensitiveLog = exports.MetricToRetainFilterSensitiveLog = exports.ActiveViolationFilterSensitiveLog = exports.ViolationEventAdditionalInfoFilterSensitiveLog = exports.BehaviorFilterSensitiveLog = exports.MetricDimensionFilterSensitiveLog = exports.BehaviorCriteriaFilterSensitiveLog = exports.MetricValueFilterSensitiveLog = exports.StatisticalThresholdFilterSensitiveLog = exports.MachineLearningDetectionConfigFilterSensitiveLog = exports.ActionFilterSensitiveLog = exports.TimestreamActionFilterSensitiveLog = exports.TimestreamTimestampFilterSensitiveLog = exports.TimestreamDimensionFilterSensitiveLog = exports.StepFunctionsActionFilterSensitiveLog = exports.SqsActionFilterSensitiveLog = void 0;
exports.TimeoutConfigFilterSensitiveLog = exports.SchedulingConfigFilterSensitiveLog = exports.MaintenanceWindowFilterSensitiveLog = exports.PresignedUrlConfigFilterSensitiveLog = exports.JobExecutionsRolloutConfigFilterSensitiveLog = exports.ExponentialRolloutRateFilterSensitiveLog = exports.RateIncreaseCriteriaFilterSensitiveLog = exports.JobExecutionsRetryConfigFilterSensitiveLog = exports.RetryCriteriaFilterSensitiveLog = exports.CreateFleetMetricResponseFilterSensitiveLog = exports.CreateFleetMetricRequestFilterSensitiveLog = exports.CreateDynamicThingGroupResponseFilterSensitiveLog = exports.CreateDynamicThingGroupRequestFilterSensitiveLog = exports.ThingGroupPropertiesFilterSensitiveLog = exports.CreateDomainConfigurationResponseFilterSensitiveLog = exports.CreateDomainConfigurationRequestFilterSensitiveLog = exports.CreateDimensionResponseFilterSensitiveLog = exports.CreateDimensionRequestFilterSensitiveLog = exports.CreateCustomMetricResponseFilterSensitiveLog = exports.CreateCustomMetricRequestFilterSensitiveLog = exports.CreateCertificateFromCsrResponseFilterSensitiveLog = exports.CreateCertificateFromCsrRequestFilterSensitiveLog = exports.CreateBillingGroupResponseFilterSensitiveLog = exports.CreateBillingGroupRequestFilterSensitiveLog = exports.BillingGroupPropertiesFilterSensitiveLog = exports.CreateAuthorizerResponseFilterSensitiveLog = exports.CreateAuthorizerRequestFilterSensitiveLog = exports.TagFilterSensitiveLog = exports.CreateAuditSuppressionResponseFilterSensitiveLog = exports.CreateAuditSuppressionRequestFilterSensitiveLog = exports.ConfirmTopicRuleDestinationResponseFilterSensitiveLog = exports.ConfirmTopicRuleDestinationRequestFilterSensitiveLog = exports.ClearDefaultAuthorizerResponseFilterSensitiveLog = exports.ClearDefaultAuthorizerRequestFilterSensitiveLog = exports.CancelJobExecutionRequestFilterSensitiveLog = exports.CancelJobResponseFilterSensitiveLog = exports.CancelJobRequestFilterSensitiveLog = exports.CancelDetectMitigationActionsTaskResponseFilterSensitiveLog = exports.CancelDetectMitigationActionsTaskRequestFilterSensitiveLog = exports.CancelCertificateTransferRequestFilterSensitiveLog = exports.CancelAuditTaskResponseFilterSensitiveLog = exports.CancelAuditTaskRequestFilterSensitiveLog = exports.CancelAuditMitigationActionsTaskResponseFilterSensitiveLog = exports.CancelAuditMitigationActionsTaskRequestFilterSensitiveLog = exports.AuthResultFilterSensitiveLog = exports.DeniedFilterSensitiveLog = exports.ImplicitDenyFilterSensitiveLog = exports.ExplicitDenyFilterSensitiveLog = exports.AuthorizerSummaryFilterSensitiveLog = exports.AuthorizerDescriptionFilterSensitiveLog = void 0;
exports.CreateScheduledAuditRequestFilterSensitiveLog = exports.CreateRoleAliasResponseFilterSensitiveLog = exports.CreateRoleAliasRequestFilterSensitiveLog = exports.CreateProvisioningTemplateVersionResponseFilterSensitiveLog = exports.CreateProvisioningTemplateVersionRequestFilterSensitiveLog = exports.CreateProvisioningTemplateResponseFilterSensitiveLog = exports.CreateProvisioningTemplateRequestFilterSensitiveLog = exports.ProvisioningHookFilterSensitiveLog = exports.CreateProvisioningClaimResponseFilterSensitiveLog = exports.CreateProvisioningClaimRequestFilterSensitiveLog = exports.CreatePolicyVersionResponseFilterSensitiveLog = exports.CreatePolicyVersionRequestFilterSensitiveLog = exports.CreatePolicyResponseFilterSensitiveLog = exports.CreatePolicyRequestFilterSensitiveLog = exports.CreateOTAUpdateResponseFilterSensitiveLog = exports.CreateOTAUpdateRequestFilterSensitiveLog = exports.OTAUpdateFileFilterSensitiveLog = exports.FileLocationFilterSensitiveLog = exports._StreamFilterSensitiveLog = exports.S3LocationFilterSensitiveLog = exports.CodeSigningFilterSensitiveLog = exports.StartSigningJobParameterFilterSensitiveLog = exports.SigningProfileParameterFilterSensitiveLog = exports.DestinationFilterSensitiveLog = exports.S3DestinationFilterSensitiveLog = exports.CustomCodeSigningFilterSensitiveLog = exports.CodeSigningSignatureFilterSensitiveLog = exports.CodeSigningCertificateChainFilterSensitiveLog = exports.AwsJobTimeoutConfigFilterSensitiveLog = exports.AwsJobPresignedUrlConfigFilterSensitiveLog = exports.AwsJobExecutionsRolloutConfigFilterSensitiveLog = exports.AwsJobExponentialRolloutRateFilterSensitiveLog = exports.AwsJobRateIncreaseCriteriaFilterSensitiveLog = exports.AwsJobAbortConfigFilterSensitiveLog = exports.AwsJobAbortCriteriaFilterSensitiveLog = exports.CreateMitigationActionResponseFilterSensitiveLog = exports.CreateMitigationActionRequestFilterSensitiveLog = exports.MitigationActionParamsFilterSensitiveLog = exports.UpdateDeviceCertificateParamsFilterSensitiveLog = exports.UpdateCACertificateParamsFilterSensitiveLog = exports.ReplaceDefaultPolicyVersionParamsFilterSensitiveLog = exports.PublishFindingToSnsParamsFilterSensitiveLog = exports.EnableIoTLoggingParamsFilterSensitiveLog = exports.CreateKeysAndCertificateResponseFilterSensitiveLog = exports.KeyPairFilterSensitiveLog = exports.CreateKeysAndCertificateRequestFilterSensitiveLog = exports.CreateJobTemplateResponseFilterSensitiveLog = exports.CreateJobTemplateRequestFilterSensitiveLog = exports.CreateJobResponseFilterSensitiveLog = exports.CreateJobRequestFilterSensitiveLog = void 0;
exports.DeleteOTAUpdateResponseFilterSensitiveLog = exports.DeleteOTAUpdateRequestFilterSensitiveLog = exports.DeleteMitigationActionResponseFilterSensitiveLog = exports.DeleteMitigationActionRequestFilterSensitiveLog = exports.DeleteJobTemplateRequestFilterSensitiveLog = exports.DeleteJobExecutionRequestFilterSensitiveLog = exports.DeleteJobRequestFilterSensitiveLog = exports.DeleteFleetMetricRequestFilterSensitiveLog = exports.DeleteDynamicThingGroupResponseFilterSensitiveLog = exports.DeleteDynamicThingGroupRequestFilterSensitiveLog = exports.DeleteDomainConfigurationResponseFilterSensitiveLog = exports.DeleteDomainConfigurationRequestFilterSensitiveLog = exports.DeleteDimensionResponseFilterSensitiveLog = exports.DeleteDimensionRequestFilterSensitiveLog = exports.DeleteCustomMetricResponseFilterSensitiveLog = exports.DeleteCustomMetricRequestFilterSensitiveLog = exports.DeleteCertificateRequestFilterSensitiveLog = exports.DeleteCACertificateResponseFilterSensitiveLog = exports.DeleteCACertificateRequestFilterSensitiveLog = exports.DeleteBillingGroupResponseFilterSensitiveLog = exports.DeleteBillingGroupRequestFilterSensitiveLog = exports.DeleteAuthorizerResponseFilterSensitiveLog = exports.DeleteAuthorizerRequestFilterSensitiveLog = exports.DeleteAuditSuppressionResponseFilterSensitiveLog = exports.DeleteAuditSuppressionRequestFilterSensitiveLog = exports.DeleteAccountAuditConfigurationResponseFilterSensitiveLog = exports.DeleteAccountAuditConfigurationRequestFilterSensitiveLog = exports.CreateTopicRuleDestinationResponseFilterSensitiveLog = exports.TopicRuleDestinationFilterSensitiveLog = exports.VpcDestinationPropertiesFilterSensitiveLog = exports.HttpUrlDestinationPropertiesFilterSensitiveLog = exports.CreateTopicRuleDestinationRequestFilterSensitiveLog = exports.TopicRuleDestinationConfigurationFilterSensitiveLog = exports.VpcDestinationConfigurationFilterSensitiveLog = exports.HttpUrlDestinationConfigurationFilterSensitiveLog = exports.CreateTopicRuleRequestFilterSensitiveLog = exports.TopicRulePayloadFilterSensitiveLog = exports.CreateThingTypeResponseFilterSensitiveLog = exports.CreateThingTypeRequestFilterSensitiveLog = exports.ThingTypePropertiesFilterSensitiveLog = exports.CreateThingGroupResponseFilterSensitiveLog = exports.CreateThingGroupRequestFilterSensitiveLog = exports.CreateThingResponseFilterSensitiveLog = exports.CreateThingRequestFilterSensitiveLog = exports.CreateStreamResponseFilterSensitiveLog = exports.CreateStreamRequestFilterSensitiveLog = exports.StreamFileFilterSensitiveLog = exports.CreateSecurityProfileResponseFilterSensitiveLog = exports.CreateSecurityProfileRequestFilterSensitiveLog = exports.CreateScheduledAuditResponseFilterSensitiveLog = void 0;
exports.DeletePolicyRequestFilterSensitiveLog = void 0;
const smithy_client_1 = require("@aws-sdk/smithy-client");
const IoTServiceException_1 = require("./IoTServiceException");
var AbortAction;
(function (AbortAction) {
    AbortAction["CANCEL"] = "CANCEL";
})(AbortAction = exports.AbortAction || (exports.AbortAction = {}));
var JobExecutionFailureType;
(function (JobExecutionFailureType) {
    JobExecutionFailureType["ALL"] = "ALL";
    JobExecutionFailureType["FAILED"] = "FAILED";
    JobExecutionFailureType["REJECTED"] = "REJECTED";
    JobExecutionFailureType["TIMED_OUT"] = "TIMED_OUT";
})(JobExecutionFailureType = exports.JobExecutionFailureType || (exports.JobExecutionFailureType = {}));
class InternalFailureException extends IoTServiceException_1.IoTServiceException {
    constructor(opts) {
        super({
            name: "InternalFailureException",
            $fault: "server",
            ...opts,
        });
        this.name = "InternalFailureException";
        this.$fault = "server";
        Object.setPrototypeOf(this, InternalFailureException.prototype);
    }
}
exports.InternalFailureException = InternalFailureException;
class InvalidRequestException extends IoTServiceException_1.IoTServiceException {
    constructor(opts) {
        super({
            name: "InvalidRequestException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidRequestException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidRequestException.prototype);
    }
}
exports.InvalidRequestException = InvalidRequestException;
class ResourceNotFoundException extends IoTServiceException_1.IoTServiceException {
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
    }
}
exports.ResourceNotFoundException = ResourceNotFoundException;
class ServiceUnavailableException extends IoTServiceException_1.IoTServiceException {
    constructor(opts) {
        super({
            name: "ServiceUnavailableException",
            $fault: "server",
            ...opts,
        });
        this.name = "ServiceUnavailableException";
        this.$fault = "server";
        Object.setPrototypeOf(this, ServiceUnavailableException.prototype);
    }
}
exports.ServiceUnavailableException = ServiceUnavailableException;
class ThrottlingException extends IoTServiceException_1.IoTServiceException {
    constructor(opts) {
        super({
            name: "ThrottlingException",
            $fault: "client",
            ...opts,
        });
        this.name = "ThrottlingException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ThrottlingException.prototype);
    }
}
exports.ThrottlingException = ThrottlingException;
class TransferAlreadyCompletedException extends IoTServiceException_1.IoTServiceException {
    constructor(opts) {
        super({
            name: "TransferAlreadyCompletedException",
            $fault: "client",
            ...opts,
        });
        this.name = "TransferAlreadyCompletedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, TransferAlreadyCompletedException.prototype);
    }
}
exports.TransferAlreadyCompletedException = TransferAlreadyCompletedException;
class UnauthorizedException extends IoTServiceException_1.IoTServiceException {
    constructor(opts) {
        super({
            name: "UnauthorizedException",
            $fault: "client",
            ...opts,
        });
        this.name = "UnauthorizedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, UnauthorizedException.prototype);
    }
}
exports.UnauthorizedException = UnauthorizedException;
var DynamoKeyType;
(function (DynamoKeyType) {
    DynamoKeyType["NUMBER"] = "NUMBER";
    DynamoKeyType["STRING"] = "STRING";
})(DynamoKeyType = exports.DynamoKeyType || (exports.DynamoKeyType = {}));
var AssetPropertyVariant;
(function (AssetPropertyVariant) {
    AssetPropertyVariant.visit = (value, visitor) => {
        if (value.stringValue !== undefined)
            return visitor.stringValue(value.stringValue);
        if (value.integerValue !== undefined)
            return visitor.integerValue(value.integerValue);
        if (value.doubleValue !== undefined)
            return visitor.doubleValue(value.doubleValue);
        if (value.booleanValue !== undefined)
            return visitor.booleanValue(value.booleanValue);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(AssetPropertyVariant = exports.AssetPropertyVariant || (exports.AssetPropertyVariant = {}));
var CannedAccessControlList;
(function (CannedAccessControlList) {
    CannedAccessControlList["AuthenticatedRead"] = "authenticated-read";
    CannedAccessControlList["AwsExecRead"] = "aws-exec-read";
    CannedAccessControlList["BucketOwnerFullControl"] = "bucket-owner-full-control";
    CannedAccessControlList["BucketOwnerRead"] = "bucket-owner-read";
    CannedAccessControlList["LogDeliveryWrite"] = "log-delivery-write";
    CannedAccessControlList["Private"] = "private";
    CannedAccessControlList["PublicRead"] = "public-read";
    CannedAccessControlList["PublicReadWrite"] = "public-read-write";
})(CannedAccessControlList = exports.CannedAccessControlList || (exports.CannedAccessControlList = {}));
var MessageFormat;
(function (MessageFormat) {
    MessageFormat["JSON"] = "JSON";
    MessageFormat["RAW"] = "RAW";
})(MessageFormat = exports.MessageFormat || (exports.MessageFormat = {}));
var ActionType;
(function (ActionType) {
    ActionType["CONNECT"] = "CONNECT";
    ActionType["PUBLISH"] = "PUBLISH";
    ActionType["RECEIVE"] = "RECEIVE";
    ActionType["SUBSCRIBE"] = "SUBSCRIBE";
})(ActionType = exports.ActionType || (exports.ActionType = {}));
var ComparisonOperator;
(function (ComparisonOperator) {
    ComparisonOperator["GREATER_THAN"] = "greater-than";
    ComparisonOperator["GREATER_THAN_EQUALS"] = "greater-than-equals";
    ComparisonOperator["IN_CIDR_SET"] = "in-cidr-set";
    ComparisonOperator["IN_PORT_SET"] = "in-port-set";
    ComparisonOperator["IN_SET"] = "in-set";
    ComparisonOperator["LESS_THAN"] = "less-than";
    ComparisonOperator["LESS_THAN_EQUALS"] = "less-than-equals";
    ComparisonOperator["NOT_IN_CIDR_SET"] = "not-in-cidr-set";
    ComparisonOperator["NOT_IN_PORT_SET"] = "not-in-port-set";
    ComparisonOperator["NOT_IN_SET"] = "not-in-set";
})(ComparisonOperator = exports.ComparisonOperator || (exports.ComparisonOperator = {}));
var ConfidenceLevel;
(function (ConfidenceLevel) {
    ConfidenceLevel["HIGH"] = "HIGH";
    ConfidenceLevel["LOW"] = "LOW";
    ConfidenceLevel["MEDIUM"] = "MEDIUM";
})(ConfidenceLevel = exports.ConfidenceLevel || (exports.ConfidenceLevel = {}));
var DimensionValueOperator;
(function (DimensionValueOperator) {
    DimensionValueOperator["IN"] = "IN";
    DimensionValueOperator["NOT_IN"] = "NOT_IN";
})(DimensionValueOperator = exports.DimensionValueOperator || (exports.DimensionValueOperator = {}));
var VerificationState;
(function (VerificationState) {
    VerificationState["BENIGN_POSITIVE"] = "BENIGN_POSITIVE";
    VerificationState["FALSE_POSITIVE"] = "FALSE_POSITIVE";
    VerificationState["TRUE_POSITIVE"] = "TRUE_POSITIVE";
    VerificationState["UNKNOWN"] = "UNKNOWN";
})(VerificationState = exports.VerificationState || (exports.VerificationState = {}));
var AggregationTypeName;
(function (AggregationTypeName) {
    AggregationTypeName["CARDINALITY"] = "Cardinality";
    AggregationTypeName["PERCENTILES"] = "Percentiles";
    AggregationTypeName["STATISTICS"] = "Statistics";
})(AggregationTypeName = exports.AggregationTypeName || (exports.AggregationTypeName = {}));
var AlertTargetType;
(function (AlertTargetType) {
    AlertTargetType["SNS"] = "SNS";
})(AlertTargetType = exports.AlertTargetType || (exports.AlertTargetType = {}));
class LimitExceededException extends IoTServiceException_1.IoTServiceException {
    constructor(opts) {
        super({
            name: "LimitExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "LimitExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, LimitExceededException.prototype);
    }
}
exports.LimitExceededException = LimitExceededException;
class VersionConflictException extends IoTServiceException_1.IoTServiceException {
    constructor(opts) {
        super({
            name: "VersionConflictException",
            $fault: "client",
            ...opts,
        });
        this.name = "VersionConflictException";
        this.$fault = "client";
        Object.setPrototypeOf(this, VersionConflictException.prototype);
    }
}
exports.VersionConflictException = VersionConflictException;
var AuditCheckRunStatus;
(function (AuditCheckRunStatus) {
    AuditCheckRunStatus["CANCELED"] = "CANCELED";
    AuditCheckRunStatus["COMPLETED_COMPLIANT"] = "COMPLETED_COMPLIANT";
    AuditCheckRunStatus["COMPLETED_NON_COMPLIANT"] = "COMPLETED_NON_COMPLIANT";
    AuditCheckRunStatus["FAILED"] = "FAILED";
    AuditCheckRunStatus["IN_PROGRESS"] = "IN_PROGRESS";
    AuditCheckRunStatus["WAITING_FOR_DATA_COLLECTION"] = "WAITING_FOR_DATA_COLLECTION";
})(AuditCheckRunStatus = exports.AuditCheckRunStatus || (exports.AuditCheckRunStatus = {}));
var ResourceType;
(function (ResourceType) {
    ResourceType["ACCOUNT_SETTINGS"] = "ACCOUNT_SETTINGS";
    ResourceType["CA_CERTIFICATE"] = "CA_CERTIFICATE";
    ResourceType["CLIENT_ID"] = "CLIENT_ID";
    ResourceType["COGNITO_IDENTITY_POOL"] = "COGNITO_IDENTITY_POOL";
    ResourceType["DEVICE_CERTIFICATE"] = "DEVICE_CERTIFICATE";
    ResourceType["IAM_ROLE"] = "IAM_ROLE";
    ResourceType["IOT_POLICY"] = "IOT_POLICY";
    ResourceType["ISSUER_CERTIFICATE"] = "ISSUER_CERTIFICATE";
    ResourceType["ROLE_ALIAS"] = "ROLE_ALIAS";
})(ResourceType = exports.ResourceType || (exports.ResourceType = {}));
var AuditFindingSeverity;
(function (AuditFindingSeverity) {
    AuditFindingSeverity["CRITICAL"] = "CRITICAL";
    AuditFindingSeverity["HIGH"] = "HIGH";
    AuditFindingSeverity["LOW"] = "LOW";
    AuditFindingSeverity["MEDIUM"] = "MEDIUM";
})(AuditFindingSeverity = exports.AuditFindingSeverity || (exports.AuditFindingSeverity = {}));
var AuditFrequency;
(function (AuditFrequency) {
    AuditFrequency["BIWEEKLY"] = "BIWEEKLY";
    AuditFrequency["DAILY"] = "DAILY";
    AuditFrequency["MONTHLY"] = "MONTHLY";
    AuditFrequency["WEEKLY"] = "WEEKLY";
})(AuditFrequency = exports.AuditFrequency || (exports.AuditFrequency = {}));
var AuditMitigationActionsExecutionStatus;
(function (AuditMitigationActionsExecutionStatus) {
    AuditMitigationActionsExecutionStatus["CANCELED"] = "CANCELED";
    AuditMitigationActionsExecutionStatus["COMPLETED"] = "COMPLETED";
    AuditMitigationActionsExecutionStatus["FAILED"] = "FAILED";
    AuditMitigationActionsExecutionStatus["IN_PROGRESS"] = "IN_PROGRESS";
    AuditMitigationActionsExecutionStatus["PENDING"] = "PENDING";
    AuditMitigationActionsExecutionStatus["SKIPPED"] = "SKIPPED";
})(AuditMitigationActionsExecutionStatus = exports.AuditMitigationActionsExecutionStatus || (exports.AuditMitigationActionsExecutionStatus = {}));
var AuditMitigationActionsTaskStatus;
(function (AuditMitigationActionsTaskStatus) {
    AuditMitigationActionsTaskStatus["CANCELED"] = "CANCELED";
    AuditMitigationActionsTaskStatus["COMPLETED"] = "COMPLETED";
    AuditMitigationActionsTaskStatus["FAILED"] = "FAILED";
    AuditMitigationActionsTaskStatus["IN_PROGRESS"] = "IN_PROGRESS";
})(AuditMitigationActionsTaskStatus = exports.AuditMitigationActionsTaskStatus || (exports.AuditMitigationActionsTaskStatus = {}));
var AuditNotificationType;
(function (AuditNotificationType) {
    AuditNotificationType["SNS"] = "SNS";
})(AuditNotificationType = exports.AuditNotificationType || (exports.AuditNotificationType = {}));
var AuditTaskStatus;
(function (AuditTaskStatus) {
    AuditTaskStatus["CANCELED"] = "CANCELED";
    AuditTaskStatus["COMPLETED"] = "COMPLETED";
    AuditTaskStatus["FAILED"] = "FAILED";
    AuditTaskStatus["IN_PROGRESS"] = "IN_PROGRESS";
})(AuditTaskStatus = exports.AuditTaskStatus || (exports.AuditTaskStatus = {}));
var AuditTaskType;
(function (AuditTaskType) {
    AuditTaskType["ON_DEMAND_AUDIT_TASK"] = "ON_DEMAND_AUDIT_TASK";
    AuditTaskType["SCHEDULED_AUDIT_TASK"] = "SCHEDULED_AUDIT_TASK";
})(AuditTaskType = exports.AuditTaskType || (exports.AuditTaskType = {}));
var AuthDecision;
(function (AuthDecision) {
    AuthDecision["ALLOWED"] = "ALLOWED";
    AuthDecision["EXPLICIT_DENY"] = "EXPLICIT_DENY";
    AuthDecision["IMPLICIT_DENY"] = "IMPLICIT_DENY";
})(AuthDecision = exports.AuthDecision || (exports.AuthDecision = {}));
var AuthorizerStatus;
(function (AuthorizerStatus) {
    AuthorizerStatus["ACTIVE"] = "ACTIVE";
    AuthorizerStatus["INACTIVE"] = "INACTIVE";
})(AuthorizerStatus = exports.AuthorizerStatus || (exports.AuthorizerStatus = {}));
var AutoRegistrationStatus;
(function (AutoRegistrationStatus) {
    AutoRegistrationStatus["DISABLE"] = "DISABLE";
    AutoRegistrationStatus["ENABLE"] = "ENABLE";
})(AutoRegistrationStatus = exports.AutoRegistrationStatus || (exports.AutoRegistrationStatus = {}));
class InvalidStateTransitionException extends IoTServiceException_1.IoTServiceException {
    constructor(opts) {
        super({
            name: "InvalidStateTransitionException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidStateTransitionException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidStateTransitionException.prototype);
    }
}
exports.InvalidStateTransitionException = InvalidStateTransitionException;
class ConflictingResourceUpdateException extends IoTServiceException_1.IoTServiceException {
    constructor(opts) {
        super({
            name: "ConflictingResourceUpdateException",
            $fault: "client",
            ...opts,
        });
        this.name = "ConflictingResourceUpdateException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ConflictingResourceUpdateException.prototype);
    }
}
exports.ConflictingResourceUpdateException = ConflictingResourceUpdateException;
class InternalException extends IoTServiceException_1.IoTServiceException {
    constructor(opts) {
        super({
            name: "InternalException",
            $fault: "server",
            ...opts,
        });
        this.name = "InternalException";
        this.$fault = "server";
        Object.setPrototypeOf(this, InternalException.prototype);
    }
}
exports.InternalException = InternalException;
class ResourceAlreadyExistsException extends IoTServiceException_1.IoTServiceException {
    constructor(opts) {
        super({
            name: "ResourceAlreadyExistsException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceAlreadyExistsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceAlreadyExistsException.prototype);
        this.resourceId = opts.resourceId;
        this.resourceArn = opts.resourceArn;
    }
}
exports.ResourceAlreadyExistsException = ResourceAlreadyExistsException;
var CustomMetricType;
(function (CustomMetricType) {
    CustomMetricType["IP_ADDRESS_LIST"] = "ip-address-list";
    CustomMetricType["NUMBER"] = "number";
    CustomMetricType["NUMBER_LIST"] = "number-list";
    CustomMetricType["STRING_LIST"] = "string-list";
})(CustomMetricType = exports.CustomMetricType || (exports.CustomMetricType = {}));
var DimensionType;
(function (DimensionType) {
    DimensionType["TOPIC_FILTER"] = "TOPIC_FILTER";
})(DimensionType = exports.DimensionType || (exports.DimensionType = {}));
class CertificateValidationException extends IoTServiceException_1.IoTServiceException {
    constructor(opts) {
        super({
            name: "CertificateValidationException",
            $fault: "client",
            ...opts,
        });
        this.name = "CertificateValidationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, CertificateValidationException.prototype);
    }
}
exports.CertificateValidationException = CertificateValidationException;
var ServiceType;
(function (ServiceType) {
    ServiceType["CREDENTIAL_PROVIDER"] = "CREDENTIAL_PROVIDER";
    ServiceType["DATA"] = "DATA";
    ServiceType["JOBS"] = "JOBS";
})(ServiceType = exports.ServiceType || (exports.ServiceType = {}));
class InvalidQueryException extends IoTServiceException_1.IoTServiceException {
    constructor(opts) {
        super({
            name: "InvalidQueryException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidQueryException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidQueryException.prototype);
    }
}
exports.InvalidQueryException = InvalidQueryException;
var FleetMetricUnit;
(function (FleetMetricUnit) {
    FleetMetricUnit["Bits"] = "Bits";
    FleetMetricUnit["BitsSecond"] = "Bits/Second";
    FleetMetricUnit["Bytes"] = "Bytes";
    FleetMetricUnit["BytesSecond"] = "Bytes/Second";
    FleetMetricUnit["Count"] = "Count";
    FleetMetricUnit["CountSecond"] = "Count/Second";
    FleetMetricUnit["Gigabits"] = "Gigabits";
    FleetMetricUnit["GigabitsSecond"] = "Gigabits/Second";
    FleetMetricUnit["Gigabytes"] = "Gigabytes";
    FleetMetricUnit["GigabytesSecond"] = "Gigabytes/Second";
    FleetMetricUnit["Kilobits"] = "Kilobits";
    FleetMetricUnit["KilobitsSecond"] = "Kilobits/Second";
    FleetMetricUnit["Kilobytes"] = "Kilobytes";
    FleetMetricUnit["KilobytesSecond"] = "Kilobytes/Second";
    FleetMetricUnit["Megabits"] = "Megabits";
    FleetMetricUnit["MegabitsSecond"] = "Megabits/Second";
    FleetMetricUnit["Megabytes"] = "Megabytes";
    FleetMetricUnit["MegabytesSecond"] = "Megabytes/Second";
    FleetMetricUnit["Microseconds"] = "Microseconds";
    FleetMetricUnit["Milliseconds"] = "Milliseconds";
    FleetMetricUnit["None"] = "None";
    FleetMetricUnit["Percent"] = "Percent";
    FleetMetricUnit["Seconds"] = "Seconds";
    FleetMetricUnit["Terabits"] = "Terabits";
    FleetMetricUnit["TerabitsSecond"] = "Terabits/Second";
    FleetMetricUnit["Terabytes"] = "Terabytes";
    FleetMetricUnit["TerabytesSecond"] = "Terabytes/Second";
})(FleetMetricUnit = exports.FleetMetricUnit || (exports.FleetMetricUnit = {}));
class IndexNotReadyException extends IoTServiceException_1.IoTServiceException {
    constructor(opts) {
        super({
            name: "IndexNotReadyException",
            $fault: "client",
            ...opts,
        });
        this.name = "IndexNotReadyException";
        this.$fault = "client";
        Object.setPrototypeOf(this, IndexNotReadyException.prototype);
    }
}
exports.IndexNotReadyException = IndexNotReadyException;
class InvalidAggregationException extends IoTServiceException_1.IoTServiceException {
    constructor(opts) {
        super({
            name: "InvalidAggregationException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidAggregationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidAggregationException.prototype);
    }
}
exports.InvalidAggregationException = InvalidAggregationException;
var RetryableFailureType;
(function (RetryableFailureType) {
    RetryableFailureType["ALL"] = "ALL";
    RetryableFailureType["FAILED"] = "FAILED";
    RetryableFailureType["TIMED_OUT"] = "TIMED_OUT";
})(RetryableFailureType = exports.RetryableFailureType || (exports.RetryableFailureType = {}));
var JobEndBehavior;
(function (JobEndBehavior) {
    JobEndBehavior["CANCEL"] = "CANCEL";
    JobEndBehavior["FORCE_CANCEL"] = "FORCE_CANCEL";
    JobEndBehavior["STOP_ROLLOUT"] = "STOP_ROLLOUT";
})(JobEndBehavior = exports.JobEndBehavior || (exports.JobEndBehavior = {}));
var TargetSelection;
(function (TargetSelection) {
    TargetSelection["CONTINUOUS"] = "CONTINUOUS";
    TargetSelection["SNAPSHOT"] = "SNAPSHOT";
})(TargetSelection = exports.TargetSelection || (exports.TargetSelection = {}));
class ConflictException extends IoTServiceException_1.IoTServiceException {
    constructor(opts) {
        super({
            name: "ConflictException",
            $fault: "client",
            ...opts,
        });
        this.name = "ConflictException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ConflictException.prototype);
    }
}
exports.ConflictException = ConflictException;
var LogLevel;
(function (LogLevel) {
    LogLevel["DEBUG"] = "DEBUG";
    LogLevel["DISABLED"] = "DISABLED";
    LogLevel["ERROR"] = "ERROR";
    LogLevel["INFO"] = "INFO";
    LogLevel["WARN"] = "WARN";
})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));
var PolicyTemplateName;
(function (PolicyTemplateName) {
    PolicyTemplateName["BLANK_POLICY"] = "BLANK_POLICY";
})(PolicyTemplateName = exports.PolicyTemplateName || (exports.PolicyTemplateName = {}));
var CACertificateUpdateAction;
(function (CACertificateUpdateAction) {
    CACertificateUpdateAction["DEACTIVATE"] = "DEACTIVATE";
})(CACertificateUpdateAction = exports.CACertificateUpdateAction || (exports.CACertificateUpdateAction = {}));
var DeviceCertificateUpdateAction;
(function (DeviceCertificateUpdateAction) {
    DeviceCertificateUpdateAction["DEACTIVATE"] = "DEACTIVATE";
})(DeviceCertificateUpdateAction = exports.DeviceCertificateUpdateAction || (exports.DeviceCertificateUpdateAction = {}));
var AwsJobAbortCriteriaAbortAction;
(function (AwsJobAbortCriteriaAbortAction) {
    AwsJobAbortCriteriaAbortAction["CANCEL"] = "CANCEL";
})(AwsJobAbortCriteriaAbortAction = exports.AwsJobAbortCriteriaAbortAction || (exports.AwsJobAbortCriteriaAbortAction = {}));
var AwsJobAbortCriteriaFailureType;
(function (AwsJobAbortCriteriaFailureType) {
    AwsJobAbortCriteriaFailureType["ALL"] = "ALL";
    AwsJobAbortCriteriaFailureType["FAILED"] = "FAILED";
    AwsJobAbortCriteriaFailureType["REJECTED"] = "REJECTED";
    AwsJobAbortCriteriaFailureType["TIMED_OUT"] = "TIMED_OUT";
})(AwsJobAbortCriteriaFailureType = exports.AwsJobAbortCriteriaFailureType || (exports.AwsJobAbortCriteriaFailureType = {}));
var Protocol;
(function (Protocol) {
    Protocol["HTTP"] = "HTTP";
    Protocol["MQTT"] = "MQTT";
})(Protocol = exports.Protocol || (exports.Protocol = {}));
var OTAUpdateStatus;
(function (OTAUpdateStatus) {
    OTAUpdateStatus["CREATE_COMPLETE"] = "CREATE_COMPLETE";
    OTAUpdateStatus["CREATE_FAILED"] = "CREATE_FAILED";
    OTAUpdateStatus["CREATE_IN_PROGRESS"] = "CREATE_IN_PROGRESS";
    OTAUpdateStatus["CREATE_PENDING"] = "CREATE_PENDING";
})(OTAUpdateStatus = exports.OTAUpdateStatus || (exports.OTAUpdateStatus = {}));
class MalformedPolicyException extends IoTServiceException_1.IoTServiceException {
    constructor(opts) {
        super({
            name: "MalformedPolicyException",
            $fault: "client",
            ...opts,
        });
        this.name = "MalformedPolicyException";
        this.$fault = "client";
        Object.setPrototypeOf(this, MalformedPolicyException.prototype);
    }
}
exports.MalformedPolicyException = MalformedPolicyException;
class VersionsLimitExceededException extends IoTServiceException_1.IoTServiceException {
    constructor(opts) {
        super({
            name: "VersionsLimitExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "VersionsLimitExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, VersionsLimitExceededException.prototype);
    }
}
exports.VersionsLimitExceededException = VersionsLimitExceededException;
var TemplateType;
(function (TemplateType) {
    TemplateType["FLEET_PROVISIONING"] = "FLEET_PROVISIONING";
    TemplateType["JITP"] = "JITP";
})(TemplateType = exports.TemplateType || (exports.TemplateType = {}));
var DayOfWeek;
(function (DayOfWeek) {
    DayOfWeek["FRI"] = "FRI";
    DayOfWeek["MON"] = "MON";
    DayOfWeek["SAT"] = "SAT";
    DayOfWeek["SUN"] = "SUN";
    DayOfWeek["THU"] = "THU";
    DayOfWeek["TUE"] = "TUE";
    DayOfWeek["WED"] = "WED";
})(DayOfWeek = exports.DayOfWeek || (exports.DayOfWeek = {}));
class SqlParseException extends IoTServiceException_1.IoTServiceException {
    constructor(opts) {
        super({
            name: "SqlParseException",
            $fault: "client",
            ...opts,
        });
        this.name = "SqlParseException";
        this.$fault = "client";
        Object.setPrototypeOf(this, SqlParseException.prototype);
    }
}
exports.SqlParseException = SqlParseException;
var TopicRuleDestinationStatus;
(function (TopicRuleDestinationStatus) {
    TopicRuleDestinationStatus["DELETING"] = "DELETING";
    TopicRuleDestinationStatus["DISABLED"] = "DISABLED";
    TopicRuleDestinationStatus["ENABLED"] = "ENABLED";
    TopicRuleDestinationStatus["ERROR"] = "ERROR";
    TopicRuleDestinationStatus["IN_PROGRESS"] = "IN_PROGRESS";
})(TopicRuleDestinationStatus = exports.TopicRuleDestinationStatus || (exports.TopicRuleDestinationStatus = {}));
class DeleteConflictException extends IoTServiceException_1.IoTServiceException {
    constructor(opts) {
        super({
            name: "DeleteConflictException",
            $fault: "client",
            ...opts,
        });
        this.name = "DeleteConflictException";
        this.$fault = "client";
        Object.setPrototypeOf(this, DeleteConflictException.prototype);
    }
}
exports.DeleteConflictException = DeleteConflictException;
class CertificateStateException extends IoTServiceException_1.IoTServiceException {
    constructor(opts) {
        super({
            name: "CertificateStateException",
            $fault: "client",
            ...opts,
        });
        this.name = "CertificateStateException";
        this.$fault = "client";
        Object.setPrototypeOf(this, CertificateStateException.prototype);
    }
}
exports.CertificateStateException = CertificateStateException;
const AbortCriteriaFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AbortCriteriaFilterSensitiveLog = AbortCriteriaFilterSensitiveLog;
const AbortConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AbortConfigFilterSensitiveLog = AbortConfigFilterSensitiveLog;
const AcceptCertificateTransferRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AcceptCertificateTransferRequestFilterSensitiveLog = AcceptCertificateTransferRequestFilterSensitiveLog;
const CloudwatchAlarmActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CloudwatchAlarmActionFilterSensitiveLog = CloudwatchAlarmActionFilterSensitiveLog;
const CloudwatchLogsActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CloudwatchLogsActionFilterSensitiveLog = CloudwatchLogsActionFilterSensitiveLog;
const CloudwatchMetricActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CloudwatchMetricActionFilterSensitiveLog = CloudwatchMetricActionFilterSensitiveLog;
const DynamoDBActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DynamoDBActionFilterSensitiveLog = DynamoDBActionFilterSensitiveLog;
const PutItemInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PutItemInputFilterSensitiveLog = PutItemInputFilterSensitiveLog;
const DynamoDBv2ActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DynamoDBv2ActionFilterSensitiveLog = DynamoDBv2ActionFilterSensitiveLog;
const ElasticsearchActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ElasticsearchActionFilterSensitiveLog = ElasticsearchActionFilterSensitiveLog;
const FirehoseActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.FirehoseActionFilterSensitiveLog = FirehoseActionFilterSensitiveLog;
const SigV4AuthorizationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SigV4AuthorizationFilterSensitiveLog = SigV4AuthorizationFilterSensitiveLog;
const HttpAuthorizationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.HttpAuthorizationFilterSensitiveLog = HttpAuthorizationFilterSensitiveLog;
const HttpActionHeaderFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.HttpActionHeaderFilterSensitiveLog = HttpActionHeaderFilterSensitiveLog;
const HttpActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.HttpActionFilterSensitiveLog = HttpActionFilterSensitiveLog;
const IotAnalyticsActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.IotAnalyticsActionFilterSensitiveLog = IotAnalyticsActionFilterSensitiveLog;
const IotEventsActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.IotEventsActionFilterSensitiveLog = IotEventsActionFilterSensitiveLog;
const AssetPropertyTimestampFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AssetPropertyTimestampFilterSensitiveLog = AssetPropertyTimestampFilterSensitiveLog;
const AssetPropertyVariantFilterSensitiveLog = (obj) => {
    if (obj.stringValue !== undefined)
        return { stringValue: obj.stringValue };
    if (obj.integerValue !== undefined)
        return { integerValue: obj.integerValue };
    if (obj.doubleValue !== undefined)
        return { doubleValue: obj.doubleValue };
    if (obj.booleanValue !== undefined)
        return { booleanValue: obj.booleanValue };
    if (obj.$unknown !== undefined)
        return { [obj.$unknown[0]]: "UNKNOWN" };
};
exports.AssetPropertyVariantFilterSensitiveLog = AssetPropertyVariantFilterSensitiveLog;
const AssetPropertyValueFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.value && { value: (0, exports.AssetPropertyVariantFilterSensitiveLog)(obj.value) }),
});
exports.AssetPropertyValueFilterSensitiveLog = AssetPropertyValueFilterSensitiveLog;
const PutAssetPropertyValueEntryFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.propertyValues && {
        propertyValues: obj.propertyValues.map((item) => (0, exports.AssetPropertyValueFilterSensitiveLog)(item)),
    }),
});
exports.PutAssetPropertyValueEntryFilterSensitiveLog = PutAssetPropertyValueEntryFilterSensitiveLog;
const IotSiteWiseActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.IotSiteWiseActionFilterSensitiveLog = IotSiteWiseActionFilterSensitiveLog;
const KafkaActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.KafkaActionFilterSensitiveLog = KafkaActionFilterSensitiveLog;
const KinesisActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.KinesisActionFilterSensitiveLog = KinesisActionFilterSensitiveLog;
const LambdaActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.LambdaActionFilterSensitiveLog = LambdaActionFilterSensitiveLog;
const LocationTimestampFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.LocationTimestampFilterSensitiveLog = LocationTimestampFilterSensitiveLog;
const LocationActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.LocationActionFilterSensitiveLog = LocationActionFilterSensitiveLog;
const OpenSearchActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.OpenSearchActionFilterSensitiveLog = OpenSearchActionFilterSensitiveLog;
const UserPropertyFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UserPropertyFilterSensitiveLog = UserPropertyFilterSensitiveLog;
const MqttHeadersFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.MqttHeadersFilterSensitiveLog = MqttHeadersFilterSensitiveLog;
const RepublishActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RepublishActionFilterSensitiveLog = RepublishActionFilterSensitiveLog;
const S3ActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.S3ActionFilterSensitiveLog = S3ActionFilterSensitiveLog;
const SalesforceActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SalesforceActionFilterSensitiveLog = SalesforceActionFilterSensitiveLog;
const SnsActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SnsActionFilterSensitiveLog = SnsActionFilterSensitiveLog;
const SqsActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SqsActionFilterSensitiveLog = SqsActionFilterSensitiveLog;
const StepFunctionsActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.StepFunctionsActionFilterSensitiveLog = StepFunctionsActionFilterSensitiveLog;
const TimestreamDimensionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TimestreamDimensionFilterSensitiveLog = TimestreamDimensionFilterSensitiveLog;
const TimestreamTimestampFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TimestreamTimestampFilterSensitiveLog = TimestreamTimestampFilterSensitiveLog;
const TimestreamActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TimestreamActionFilterSensitiveLog = TimestreamActionFilterSensitiveLog;
const ActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ActionFilterSensitiveLog = ActionFilterSensitiveLog;
const MachineLearningDetectionConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.MachineLearningDetectionConfigFilterSensitiveLog = MachineLearningDetectionConfigFilterSensitiveLog;
const StatisticalThresholdFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.StatisticalThresholdFilterSensitiveLog = StatisticalThresholdFilterSensitiveLog;
const MetricValueFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.MetricValueFilterSensitiveLog = MetricValueFilterSensitiveLog;
const BehaviorCriteriaFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.BehaviorCriteriaFilterSensitiveLog = BehaviorCriteriaFilterSensitiveLog;
const MetricDimensionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.MetricDimensionFilterSensitiveLog = MetricDimensionFilterSensitiveLog;
const BehaviorFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.BehaviorFilterSensitiveLog = BehaviorFilterSensitiveLog;
const ViolationEventAdditionalInfoFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ViolationEventAdditionalInfoFilterSensitiveLog = ViolationEventAdditionalInfoFilterSensitiveLog;
const ActiveViolationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ActiveViolationFilterSensitiveLog = ActiveViolationFilterSensitiveLog;
const MetricToRetainFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.MetricToRetainFilterSensitiveLog = MetricToRetainFilterSensitiveLog;
const AddThingsToThingGroupParamsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AddThingsToThingGroupParamsFilterSensitiveLog = AddThingsToThingGroupParamsFilterSensitiveLog;
const AddThingToBillingGroupRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AddThingToBillingGroupRequestFilterSensitiveLog = AddThingToBillingGroupRequestFilterSensitiveLog;
const AddThingToBillingGroupResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AddThingToBillingGroupResponseFilterSensitiveLog = AddThingToBillingGroupResponseFilterSensitiveLog;
const AddThingToThingGroupRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AddThingToThingGroupRequestFilterSensitiveLog = AddThingToThingGroupRequestFilterSensitiveLog;
const AddThingToThingGroupResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AddThingToThingGroupResponseFilterSensitiveLog = AddThingToThingGroupResponseFilterSensitiveLog;
const AggregationTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AggregationTypeFilterSensitiveLog = AggregationTypeFilterSensitiveLog;
const AlertTargetFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AlertTargetFilterSensitiveLog = AlertTargetFilterSensitiveLog;
const PolicyFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PolicyFilterSensitiveLog = PolicyFilterSensitiveLog;
const AllowedFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AllowedFilterSensitiveLog = AllowedFilterSensitiveLog;
const AssociateTargetsWithJobRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AssociateTargetsWithJobRequestFilterSensitiveLog = AssociateTargetsWithJobRequestFilterSensitiveLog;
const AssociateTargetsWithJobResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AssociateTargetsWithJobResponseFilterSensitiveLog = AssociateTargetsWithJobResponseFilterSensitiveLog;
const AttachPolicyRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AttachPolicyRequestFilterSensitiveLog = AttachPolicyRequestFilterSensitiveLog;
const AttachPrincipalPolicyRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AttachPrincipalPolicyRequestFilterSensitiveLog = AttachPrincipalPolicyRequestFilterSensitiveLog;
const AttachSecurityProfileRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AttachSecurityProfileRequestFilterSensitiveLog = AttachSecurityProfileRequestFilterSensitiveLog;
const AttachSecurityProfileResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AttachSecurityProfileResponseFilterSensitiveLog = AttachSecurityProfileResponseFilterSensitiveLog;
const AttachThingPrincipalRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AttachThingPrincipalRequestFilterSensitiveLog = AttachThingPrincipalRequestFilterSensitiveLog;
const AttachThingPrincipalResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AttachThingPrincipalResponseFilterSensitiveLog = AttachThingPrincipalResponseFilterSensitiveLog;
const AttributePayloadFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AttributePayloadFilterSensitiveLog = AttributePayloadFilterSensitiveLog;
const AuditCheckConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AuditCheckConfigurationFilterSensitiveLog = AuditCheckConfigurationFilterSensitiveLog;
const AuditCheckDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AuditCheckDetailsFilterSensitiveLog = AuditCheckDetailsFilterSensitiveLog;
const IssuerCertificateIdentifierFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.IssuerCertificateIdentifierFilterSensitiveLog = IssuerCertificateIdentifierFilterSensitiveLog;
const PolicyVersionIdentifierFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PolicyVersionIdentifierFilterSensitiveLog = PolicyVersionIdentifierFilterSensitiveLog;
const ResourceIdentifierFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ResourceIdentifierFilterSensitiveLog = ResourceIdentifierFilterSensitiveLog;
const NonCompliantResourceFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.NonCompliantResourceFilterSensitiveLog = NonCompliantResourceFilterSensitiveLog;
const RelatedResourceFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RelatedResourceFilterSensitiveLog = RelatedResourceFilterSensitiveLog;
const AuditFindingFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AuditFindingFilterSensitiveLog = AuditFindingFilterSensitiveLog;
const AuditMitigationActionExecutionMetadataFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AuditMitigationActionExecutionMetadataFilterSensitiveLog = AuditMitigationActionExecutionMetadataFilterSensitiveLog;
const AuditMitigationActionsTaskMetadataFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AuditMitigationActionsTaskMetadataFilterSensitiveLog = AuditMitigationActionsTaskMetadataFilterSensitiveLog;
const TaskStatisticsForAuditCheckFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TaskStatisticsForAuditCheckFilterSensitiveLog = TaskStatisticsForAuditCheckFilterSensitiveLog;
const AuditMitigationActionsTaskTargetFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AuditMitigationActionsTaskTargetFilterSensitiveLog = AuditMitigationActionsTaskTargetFilterSensitiveLog;
const AuditNotificationTargetFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AuditNotificationTargetFilterSensitiveLog = AuditNotificationTargetFilterSensitiveLog;
const AuditSuppressionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AuditSuppressionFilterSensitiveLog = AuditSuppressionFilterSensitiveLog;
const AuditTaskMetadataFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AuditTaskMetadataFilterSensitiveLog = AuditTaskMetadataFilterSensitiveLog;
const AuthInfoFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AuthInfoFilterSensitiveLog = AuthInfoFilterSensitiveLog;
const AuthorizerConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AuthorizerConfigFilterSensitiveLog = AuthorizerConfigFilterSensitiveLog;
const AuthorizerDescriptionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AuthorizerDescriptionFilterSensitiveLog = AuthorizerDescriptionFilterSensitiveLog;
const AuthorizerSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AuthorizerSummaryFilterSensitiveLog = AuthorizerSummaryFilterSensitiveLog;
const ExplicitDenyFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ExplicitDenyFilterSensitiveLog = ExplicitDenyFilterSensitiveLog;
const ImplicitDenyFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ImplicitDenyFilterSensitiveLog = ImplicitDenyFilterSensitiveLog;
const DeniedFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeniedFilterSensitiveLog = DeniedFilterSensitiveLog;
const AuthResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AuthResultFilterSensitiveLog = AuthResultFilterSensitiveLog;
const CancelAuditMitigationActionsTaskRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CancelAuditMitigationActionsTaskRequestFilterSensitiveLog = CancelAuditMitigationActionsTaskRequestFilterSensitiveLog;
const CancelAuditMitigationActionsTaskResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CancelAuditMitigationActionsTaskResponseFilterSensitiveLog = CancelAuditMitigationActionsTaskResponseFilterSensitiveLog;
const CancelAuditTaskRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CancelAuditTaskRequestFilterSensitiveLog = CancelAuditTaskRequestFilterSensitiveLog;
const CancelAuditTaskResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CancelAuditTaskResponseFilterSensitiveLog = CancelAuditTaskResponseFilterSensitiveLog;
const CancelCertificateTransferRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CancelCertificateTransferRequestFilterSensitiveLog = CancelCertificateTransferRequestFilterSensitiveLog;
const CancelDetectMitigationActionsTaskRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CancelDetectMitigationActionsTaskRequestFilterSensitiveLog = CancelDetectMitigationActionsTaskRequestFilterSensitiveLog;
const CancelDetectMitigationActionsTaskResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CancelDetectMitigationActionsTaskResponseFilterSensitiveLog = CancelDetectMitigationActionsTaskResponseFilterSensitiveLog;
const CancelJobRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CancelJobRequestFilterSensitiveLog = CancelJobRequestFilterSensitiveLog;
const CancelJobResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CancelJobResponseFilterSensitiveLog = CancelJobResponseFilterSensitiveLog;
const CancelJobExecutionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CancelJobExecutionRequestFilterSensitiveLog = CancelJobExecutionRequestFilterSensitiveLog;
const ClearDefaultAuthorizerRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ClearDefaultAuthorizerRequestFilterSensitiveLog = ClearDefaultAuthorizerRequestFilterSensitiveLog;
const ClearDefaultAuthorizerResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ClearDefaultAuthorizerResponseFilterSensitiveLog = ClearDefaultAuthorizerResponseFilterSensitiveLog;
const ConfirmTopicRuleDestinationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ConfirmTopicRuleDestinationRequestFilterSensitiveLog = ConfirmTopicRuleDestinationRequestFilterSensitiveLog;
const ConfirmTopicRuleDestinationResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ConfirmTopicRuleDestinationResponseFilterSensitiveLog = ConfirmTopicRuleDestinationResponseFilterSensitiveLog;
const CreateAuditSuppressionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateAuditSuppressionRequestFilterSensitiveLog = CreateAuditSuppressionRequestFilterSensitiveLog;
const CreateAuditSuppressionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateAuditSuppressionResponseFilterSensitiveLog = CreateAuditSuppressionResponseFilterSensitiveLog;
const TagFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TagFilterSensitiveLog = TagFilterSensitiveLog;
const CreateAuthorizerRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateAuthorizerRequestFilterSensitiveLog = CreateAuthorizerRequestFilterSensitiveLog;
const CreateAuthorizerResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateAuthorizerResponseFilterSensitiveLog = CreateAuthorizerResponseFilterSensitiveLog;
const BillingGroupPropertiesFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.BillingGroupPropertiesFilterSensitiveLog = BillingGroupPropertiesFilterSensitiveLog;
const CreateBillingGroupRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateBillingGroupRequestFilterSensitiveLog = CreateBillingGroupRequestFilterSensitiveLog;
const CreateBillingGroupResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateBillingGroupResponseFilterSensitiveLog = CreateBillingGroupResponseFilterSensitiveLog;
const CreateCertificateFromCsrRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateCertificateFromCsrRequestFilterSensitiveLog = CreateCertificateFromCsrRequestFilterSensitiveLog;
const CreateCertificateFromCsrResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateCertificateFromCsrResponseFilterSensitiveLog = CreateCertificateFromCsrResponseFilterSensitiveLog;
const CreateCustomMetricRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateCustomMetricRequestFilterSensitiveLog = CreateCustomMetricRequestFilterSensitiveLog;
const CreateCustomMetricResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateCustomMetricResponseFilterSensitiveLog = CreateCustomMetricResponseFilterSensitiveLog;
const CreateDimensionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateDimensionRequestFilterSensitiveLog = CreateDimensionRequestFilterSensitiveLog;
const CreateDimensionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateDimensionResponseFilterSensitiveLog = CreateDimensionResponseFilterSensitiveLog;
const CreateDomainConfigurationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateDomainConfigurationRequestFilterSensitiveLog = CreateDomainConfigurationRequestFilterSensitiveLog;
const CreateDomainConfigurationResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateDomainConfigurationResponseFilterSensitiveLog = CreateDomainConfigurationResponseFilterSensitiveLog;
const ThingGroupPropertiesFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ThingGroupPropertiesFilterSensitiveLog = ThingGroupPropertiesFilterSensitiveLog;
const CreateDynamicThingGroupRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateDynamicThingGroupRequestFilterSensitiveLog = CreateDynamicThingGroupRequestFilterSensitiveLog;
const CreateDynamicThingGroupResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateDynamicThingGroupResponseFilterSensitiveLog = CreateDynamicThingGroupResponseFilterSensitiveLog;
const CreateFleetMetricRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateFleetMetricRequestFilterSensitiveLog = CreateFleetMetricRequestFilterSensitiveLog;
const CreateFleetMetricResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateFleetMetricResponseFilterSensitiveLog = CreateFleetMetricResponseFilterSensitiveLog;
const RetryCriteriaFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RetryCriteriaFilterSensitiveLog = RetryCriteriaFilterSensitiveLog;
const JobExecutionsRetryConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.JobExecutionsRetryConfigFilterSensitiveLog = JobExecutionsRetryConfigFilterSensitiveLog;
const RateIncreaseCriteriaFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RateIncreaseCriteriaFilterSensitiveLog = RateIncreaseCriteriaFilterSensitiveLog;
const ExponentialRolloutRateFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ExponentialRolloutRateFilterSensitiveLog = ExponentialRolloutRateFilterSensitiveLog;
const JobExecutionsRolloutConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.JobExecutionsRolloutConfigFilterSensitiveLog = JobExecutionsRolloutConfigFilterSensitiveLog;
const PresignedUrlConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PresignedUrlConfigFilterSensitiveLog = PresignedUrlConfigFilterSensitiveLog;
const MaintenanceWindowFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.MaintenanceWindowFilterSensitiveLog = MaintenanceWindowFilterSensitiveLog;
const SchedulingConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SchedulingConfigFilterSensitiveLog = SchedulingConfigFilterSensitiveLog;
const TimeoutConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TimeoutConfigFilterSensitiveLog = TimeoutConfigFilterSensitiveLog;
const CreateJobRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateJobRequestFilterSensitiveLog = CreateJobRequestFilterSensitiveLog;
const CreateJobResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateJobResponseFilterSensitiveLog = CreateJobResponseFilterSensitiveLog;
const CreateJobTemplateRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateJobTemplateRequestFilterSensitiveLog = CreateJobTemplateRequestFilterSensitiveLog;
const CreateJobTemplateResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateJobTemplateResponseFilterSensitiveLog = CreateJobTemplateResponseFilterSensitiveLog;
const CreateKeysAndCertificateRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateKeysAndCertificateRequestFilterSensitiveLog = CreateKeysAndCertificateRequestFilterSensitiveLog;
const KeyPairFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.PrivateKey && { PrivateKey: smithy_client_1.SENSITIVE_STRING }),
});
exports.KeyPairFilterSensitiveLog = KeyPairFilterSensitiveLog;
const CreateKeysAndCertificateResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.keyPair && { keyPair: (0, exports.KeyPairFilterSensitiveLog)(obj.keyPair) }),
});
exports.CreateKeysAndCertificateResponseFilterSensitiveLog = CreateKeysAndCertificateResponseFilterSensitiveLog;
const EnableIoTLoggingParamsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.EnableIoTLoggingParamsFilterSensitiveLog = EnableIoTLoggingParamsFilterSensitiveLog;
const PublishFindingToSnsParamsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PublishFindingToSnsParamsFilterSensitiveLog = PublishFindingToSnsParamsFilterSensitiveLog;
const ReplaceDefaultPolicyVersionParamsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ReplaceDefaultPolicyVersionParamsFilterSensitiveLog = ReplaceDefaultPolicyVersionParamsFilterSensitiveLog;
const UpdateCACertificateParamsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateCACertificateParamsFilterSensitiveLog = UpdateCACertificateParamsFilterSensitiveLog;
const UpdateDeviceCertificateParamsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateDeviceCertificateParamsFilterSensitiveLog = UpdateDeviceCertificateParamsFilterSensitiveLog;
const MitigationActionParamsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.MitigationActionParamsFilterSensitiveLog = MitigationActionParamsFilterSensitiveLog;
const CreateMitigationActionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateMitigationActionRequestFilterSensitiveLog = CreateMitigationActionRequestFilterSensitiveLog;
const CreateMitigationActionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateMitigationActionResponseFilterSensitiveLog = CreateMitigationActionResponseFilterSensitiveLog;
const AwsJobAbortCriteriaFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AwsJobAbortCriteriaFilterSensitiveLog = AwsJobAbortCriteriaFilterSensitiveLog;
const AwsJobAbortConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AwsJobAbortConfigFilterSensitiveLog = AwsJobAbortConfigFilterSensitiveLog;
const AwsJobRateIncreaseCriteriaFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AwsJobRateIncreaseCriteriaFilterSensitiveLog = AwsJobRateIncreaseCriteriaFilterSensitiveLog;
const AwsJobExponentialRolloutRateFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AwsJobExponentialRolloutRateFilterSensitiveLog = AwsJobExponentialRolloutRateFilterSensitiveLog;
const AwsJobExecutionsRolloutConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AwsJobExecutionsRolloutConfigFilterSensitiveLog = AwsJobExecutionsRolloutConfigFilterSensitiveLog;
const AwsJobPresignedUrlConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AwsJobPresignedUrlConfigFilterSensitiveLog = AwsJobPresignedUrlConfigFilterSensitiveLog;
const AwsJobTimeoutConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AwsJobTimeoutConfigFilterSensitiveLog = AwsJobTimeoutConfigFilterSensitiveLog;
const CodeSigningCertificateChainFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CodeSigningCertificateChainFilterSensitiveLog = CodeSigningCertificateChainFilterSensitiveLog;
const CodeSigningSignatureFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CodeSigningSignatureFilterSensitiveLog = CodeSigningSignatureFilterSensitiveLog;
const CustomCodeSigningFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CustomCodeSigningFilterSensitiveLog = CustomCodeSigningFilterSensitiveLog;
const S3DestinationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.S3DestinationFilterSensitiveLog = S3DestinationFilterSensitiveLog;
const DestinationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DestinationFilterSensitiveLog = DestinationFilterSensitiveLog;
const SigningProfileParameterFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SigningProfileParameterFilterSensitiveLog = SigningProfileParameterFilterSensitiveLog;
const StartSigningJobParameterFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.StartSigningJobParameterFilterSensitiveLog = StartSigningJobParameterFilterSensitiveLog;
const CodeSigningFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CodeSigningFilterSensitiveLog = CodeSigningFilterSensitiveLog;
const S3LocationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.S3LocationFilterSensitiveLog = S3LocationFilterSensitiveLog;
const _StreamFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports._StreamFilterSensitiveLog = _StreamFilterSensitiveLog;
const FileLocationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.FileLocationFilterSensitiveLog = FileLocationFilterSensitiveLog;
const OTAUpdateFileFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.OTAUpdateFileFilterSensitiveLog = OTAUpdateFileFilterSensitiveLog;
const CreateOTAUpdateRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateOTAUpdateRequestFilterSensitiveLog = CreateOTAUpdateRequestFilterSensitiveLog;
const CreateOTAUpdateResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateOTAUpdateResponseFilterSensitiveLog = CreateOTAUpdateResponseFilterSensitiveLog;
const CreatePolicyRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreatePolicyRequestFilterSensitiveLog = CreatePolicyRequestFilterSensitiveLog;
const CreatePolicyResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreatePolicyResponseFilterSensitiveLog = CreatePolicyResponseFilterSensitiveLog;
const CreatePolicyVersionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreatePolicyVersionRequestFilterSensitiveLog = CreatePolicyVersionRequestFilterSensitiveLog;
const CreatePolicyVersionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreatePolicyVersionResponseFilterSensitiveLog = CreatePolicyVersionResponseFilterSensitiveLog;
const CreateProvisioningClaimRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateProvisioningClaimRequestFilterSensitiveLog = CreateProvisioningClaimRequestFilterSensitiveLog;
const CreateProvisioningClaimResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.keyPair && { keyPair: (0, exports.KeyPairFilterSensitiveLog)(obj.keyPair) }),
});
exports.CreateProvisioningClaimResponseFilterSensitiveLog = CreateProvisioningClaimResponseFilterSensitiveLog;
const ProvisioningHookFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ProvisioningHookFilterSensitiveLog = ProvisioningHookFilterSensitiveLog;
const CreateProvisioningTemplateRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateProvisioningTemplateRequestFilterSensitiveLog = CreateProvisioningTemplateRequestFilterSensitiveLog;
const CreateProvisioningTemplateResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateProvisioningTemplateResponseFilterSensitiveLog = CreateProvisioningTemplateResponseFilterSensitiveLog;
const CreateProvisioningTemplateVersionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateProvisioningTemplateVersionRequestFilterSensitiveLog = CreateProvisioningTemplateVersionRequestFilterSensitiveLog;
const CreateProvisioningTemplateVersionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateProvisioningTemplateVersionResponseFilterSensitiveLog = CreateProvisioningTemplateVersionResponseFilterSensitiveLog;
const CreateRoleAliasRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateRoleAliasRequestFilterSensitiveLog = CreateRoleAliasRequestFilterSensitiveLog;
const CreateRoleAliasResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateRoleAliasResponseFilterSensitiveLog = CreateRoleAliasResponseFilterSensitiveLog;
const CreateScheduledAuditRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateScheduledAuditRequestFilterSensitiveLog = CreateScheduledAuditRequestFilterSensitiveLog;
const CreateScheduledAuditResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateScheduledAuditResponseFilterSensitiveLog = CreateScheduledAuditResponseFilterSensitiveLog;
const CreateSecurityProfileRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateSecurityProfileRequestFilterSensitiveLog = CreateSecurityProfileRequestFilterSensitiveLog;
const CreateSecurityProfileResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateSecurityProfileResponseFilterSensitiveLog = CreateSecurityProfileResponseFilterSensitiveLog;
const StreamFileFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.StreamFileFilterSensitiveLog = StreamFileFilterSensitiveLog;
const CreateStreamRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateStreamRequestFilterSensitiveLog = CreateStreamRequestFilterSensitiveLog;
const CreateStreamResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateStreamResponseFilterSensitiveLog = CreateStreamResponseFilterSensitiveLog;
const CreateThingRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateThingRequestFilterSensitiveLog = CreateThingRequestFilterSensitiveLog;
const CreateThingResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateThingResponseFilterSensitiveLog = CreateThingResponseFilterSensitiveLog;
const CreateThingGroupRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateThingGroupRequestFilterSensitiveLog = CreateThingGroupRequestFilterSensitiveLog;
const CreateThingGroupResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateThingGroupResponseFilterSensitiveLog = CreateThingGroupResponseFilterSensitiveLog;
const ThingTypePropertiesFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ThingTypePropertiesFilterSensitiveLog = ThingTypePropertiesFilterSensitiveLog;
const CreateThingTypeRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateThingTypeRequestFilterSensitiveLog = CreateThingTypeRequestFilterSensitiveLog;
const CreateThingTypeResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateThingTypeResponseFilterSensitiveLog = CreateThingTypeResponseFilterSensitiveLog;
const TopicRulePayloadFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TopicRulePayloadFilterSensitiveLog = TopicRulePayloadFilterSensitiveLog;
const CreateTopicRuleRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateTopicRuleRequestFilterSensitiveLog = CreateTopicRuleRequestFilterSensitiveLog;
const HttpUrlDestinationConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.HttpUrlDestinationConfigurationFilterSensitiveLog = HttpUrlDestinationConfigurationFilterSensitiveLog;
const VpcDestinationConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.VpcDestinationConfigurationFilterSensitiveLog = VpcDestinationConfigurationFilterSensitiveLog;
const TopicRuleDestinationConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TopicRuleDestinationConfigurationFilterSensitiveLog = TopicRuleDestinationConfigurationFilterSensitiveLog;
const CreateTopicRuleDestinationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateTopicRuleDestinationRequestFilterSensitiveLog = CreateTopicRuleDestinationRequestFilterSensitiveLog;
const HttpUrlDestinationPropertiesFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.HttpUrlDestinationPropertiesFilterSensitiveLog = HttpUrlDestinationPropertiesFilterSensitiveLog;
const VpcDestinationPropertiesFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.VpcDestinationPropertiesFilterSensitiveLog = VpcDestinationPropertiesFilterSensitiveLog;
const TopicRuleDestinationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TopicRuleDestinationFilterSensitiveLog = TopicRuleDestinationFilterSensitiveLog;
const CreateTopicRuleDestinationResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateTopicRuleDestinationResponseFilterSensitiveLog = CreateTopicRuleDestinationResponseFilterSensitiveLog;
const DeleteAccountAuditConfigurationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteAccountAuditConfigurationRequestFilterSensitiveLog = DeleteAccountAuditConfigurationRequestFilterSensitiveLog;
const DeleteAccountAuditConfigurationResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteAccountAuditConfigurationResponseFilterSensitiveLog = DeleteAccountAuditConfigurationResponseFilterSensitiveLog;
const DeleteAuditSuppressionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteAuditSuppressionRequestFilterSensitiveLog = DeleteAuditSuppressionRequestFilterSensitiveLog;
const DeleteAuditSuppressionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteAuditSuppressionResponseFilterSensitiveLog = DeleteAuditSuppressionResponseFilterSensitiveLog;
const DeleteAuthorizerRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteAuthorizerRequestFilterSensitiveLog = DeleteAuthorizerRequestFilterSensitiveLog;
const DeleteAuthorizerResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteAuthorizerResponseFilterSensitiveLog = DeleteAuthorizerResponseFilterSensitiveLog;
const DeleteBillingGroupRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteBillingGroupRequestFilterSensitiveLog = DeleteBillingGroupRequestFilterSensitiveLog;
const DeleteBillingGroupResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteBillingGroupResponseFilterSensitiveLog = DeleteBillingGroupResponseFilterSensitiveLog;
const DeleteCACertificateRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteCACertificateRequestFilterSensitiveLog = DeleteCACertificateRequestFilterSensitiveLog;
const DeleteCACertificateResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteCACertificateResponseFilterSensitiveLog = DeleteCACertificateResponseFilterSensitiveLog;
const DeleteCertificateRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteCertificateRequestFilterSensitiveLog = DeleteCertificateRequestFilterSensitiveLog;
const DeleteCustomMetricRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteCustomMetricRequestFilterSensitiveLog = DeleteCustomMetricRequestFilterSensitiveLog;
const DeleteCustomMetricResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteCustomMetricResponseFilterSensitiveLog = DeleteCustomMetricResponseFilterSensitiveLog;
const DeleteDimensionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteDimensionRequestFilterSensitiveLog = DeleteDimensionRequestFilterSensitiveLog;
const DeleteDimensionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteDimensionResponseFilterSensitiveLog = DeleteDimensionResponseFilterSensitiveLog;
const DeleteDomainConfigurationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteDomainConfigurationRequestFilterSensitiveLog = DeleteDomainConfigurationRequestFilterSensitiveLog;
const DeleteDomainConfigurationResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteDomainConfigurationResponseFilterSensitiveLog = DeleteDomainConfigurationResponseFilterSensitiveLog;
const DeleteDynamicThingGroupRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteDynamicThingGroupRequestFilterSensitiveLog = DeleteDynamicThingGroupRequestFilterSensitiveLog;
const DeleteDynamicThingGroupResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteDynamicThingGroupResponseFilterSensitiveLog = DeleteDynamicThingGroupResponseFilterSensitiveLog;
const DeleteFleetMetricRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteFleetMetricRequestFilterSensitiveLog = DeleteFleetMetricRequestFilterSensitiveLog;
const DeleteJobRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteJobRequestFilterSensitiveLog = DeleteJobRequestFilterSensitiveLog;
const DeleteJobExecutionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteJobExecutionRequestFilterSensitiveLog = DeleteJobExecutionRequestFilterSensitiveLog;
const DeleteJobTemplateRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteJobTemplateRequestFilterSensitiveLog = DeleteJobTemplateRequestFilterSensitiveLog;
const DeleteMitigationActionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteMitigationActionRequestFilterSensitiveLog = DeleteMitigationActionRequestFilterSensitiveLog;
const DeleteMitigationActionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteMitigationActionResponseFilterSensitiveLog = DeleteMitigationActionResponseFilterSensitiveLog;
const DeleteOTAUpdateRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteOTAUpdateRequestFilterSensitiveLog = DeleteOTAUpdateRequestFilterSensitiveLog;
const DeleteOTAUpdateResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteOTAUpdateResponseFilterSensitiveLog = DeleteOTAUpdateResponseFilterSensitiveLog;
const DeletePolicyRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeletePolicyRequestFilterSensitiveLog = DeletePolicyRequestFilterSensitiveLog;
