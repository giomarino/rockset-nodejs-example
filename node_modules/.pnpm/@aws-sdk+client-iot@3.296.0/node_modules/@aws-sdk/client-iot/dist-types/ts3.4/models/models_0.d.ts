import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
import { IoTServiceException as __BaseException } from "./IoTServiceException";
export declare enum AbortAction {
  CANCEL = "CANCEL",
}
export declare enum JobExecutionFailureType {
  ALL = "ALL",
  FAILED = "FAILED",
  REJECTED = "REJECTED",
  TIMED_OUT = "TIMED_OUT",
}
export interface AbortCriteria {
  failureType: JobExecutionFailureType | string | undefined;
  action: AbortAction | string | undefined;
  thresholdPercentage: number | undefined;
  minNumberOfExecutedThings: number | undefined;
}
export interface AbortConfig {
  criteriaList: AbortCriteria[] | undefined;
}
export interface AcceptCertificateTransferRequest {
  certificateId: string | undefined;
  setAsActive?: boolean;
}
export declare class InternalFailureException extends __BaseException {
  readonly name: "InternalFailureException";
  readonly $fault: "server";
  constructor(
    opts: __ExceptionOptionType<InternalFailureException, __BaseException>
  );
}
export declare class InvalidRequestException extends __BaseException {
  readonly name: "InvalidRequestException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidRequestException, __BaseException>
  );
}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export declare class ServiceUnavailableException extends __BaseException {
  readonly name: "ServiceUnavailableException";
  readonly $fault: "server";
  constructor(
    opts: __ExceptionOptionType<ServiceUnavailableException, __BaseException>
  );
}
export declare class ThrottlingException extends __BaseException {
  readonly name: "ThrottlingException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ThrottlingException, __BaseException>
  );
}
export declare class TransferAlreadyCompletedException extends __BaseException {
  readonly name: "TransferAlreadyCompletedException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      TransferAlreadyCompletedException,
      __BaseException
    >
  );
}
export declare class UnauthorizedException extends __BaseException {
  readonly name: "UnauthorizedException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<UnauthorizedException, __BaseException>
  );
}
export interface CloudwatchAlarmAction {
  roleArn: string | undefined;
  alarmName: string | undefined;
  stateReason: string | undefined;
  stateValue: string | undefined;
}
export interface CloudwatchLogsAction {
  roleArn: string | undefined;
  logGroupName: string | undefined;
  batchMode?: boolean;
}
export interface CloudwatchMetricAction {
  roleArn: string | undefined;
  metricNamespace: string | undefined;
  metricName: string | undefined;
  metricValue: string | undefined;
  metricUnit: string | undefined;
  metricTimestamp?: string;
}
export declare enum DynamoKeyType {
  NUMBER = "NUMBER",
  STRING = "STRING",
}
export interface DynamoDBAction {
  tableName: string | undefined;
  roleArn: string | undefined;
  operation?: string;
  hashKeyField: string | undefined;
  hashKeyValue: string | undefined;
  hashKeyType?: DynamoKeyType | string;
  rangeKeyField?: string;
  rangeKeyValue?: string;
  rangeKeyType?: DynamoKeyType | string;
  payloadField?: string;
}
export interface PutItemInput {
  tableName: string | undefined;
}
export interface DynamoDBv2Action {
  roleArn: string | undefined;
  putItem: PutItemInput | undefined;
}
export interface ElasticsearchAction {
  roleArn: string | undefined;
  endpoint: string | undefined;
  index: string | undefined;
  type: string | undefined;
  id: string | undefined;
}
export interface FirehoseAction {
  roleArn: string | undefined;
  deliveryStreamName: string | undefined;
  separator?: string;
  batchMode?: boolean;
}
export interface SigV4Authorization {
  signingRegion: string | undefined;
  serviceName: string | undefined;
  roleArn: string | undefined;
}
export interface HttpAuthorization {
  sigv4?: SigV4Authorization;
}
export interface HttpActionHeader {
  key: string | undefined;
  value: string | undefined;
}
export interface HttpAction {
  url: string | undefined;
  confirmationUrl?: string;
  headers?: HttpActionHeader[];
  auth?: HttpAuthorization;
}
export interface IotAnalyticsAction {
  channelArn?: string;
  channelName?: string;
  batchMode?: boolean;
  roleArn?: string;
}
export interface IotEventsAction {
  inputName: string | undefined;
  messageId?: string;
  batchMode?: boolean;
  roleArn: string | undefined;
}
export interface AssetPropertyTimestamp {
  timeInSeconds: string | undefined;
  offsetInNanos?: string;
}
export type AssetPropertyVariant =
  | AssetPropertyVariant.BooleanValueMember
  | AssetPropertyVariant.DoubleValueMember
  | AssetPropertyVariant.IntegerValueMember
  | AssetPropertyVariant.StringValueMember
  | AssetPropertyVariant.$UnknownMember;
export declare namespace AssetPropertyVariant {
  interface StringValueMember {
    stringValue: string;
    integerValue?: never;
    doubleValue?: never;
    booleanValue?: never;
    $unknown?: never;
  }
  interface IntegerValueMember {
    stringValue?: never;
    integerValue: string;
    doubleValue?: never;
    booleanValue?: never;
    $unknown?: never;
  }
  interface DoubleValueMember {
    stringValue?: never;
    integerValue?: never;
    doubleValue: string;
    booleanValue?: never;
    $unknown?: never;
  }
  interface BooleanValueMember {
    stringValue?: never;
    integerValue?: never;
    doubleValue?: never;
    booleanValue: string;
    $unknown?: never;
  }
  interface $UnknownMember {
    stringValue?: never;
    integerValue?: never;
    doubleValue?: never;
    booleanValue?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    stringValue: (value: string) => T;
    integerValue: (value: string) => T;
    doubleValue: (value: string) => T;
    booleanValue: (value: string) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(value: AssetPropertyVariant, visitor: Visitor<T>) => T;
}
export interface AssetPropertyValue {
  value: AssetPropertyVariant | undefined;
  timestamp: AssetPropertyTimestamp | undefined;
  quality?: string;
}
export interface PutAssetPropertyValueEntry {
  entryId?: string;
  assetId?: string;
  propertyId?: string;
  propertyAlias?: string;
  propertyValues: AssetPropertyValue[] | undefined;
}
export interface IotSiteWiseAction {
  putAssetPropertyValueEntries: PutAssetPropertyValueEntry[] | undefined;
  roleArn: string | undefined;
}
export interface KafkaAction {
  destinationArn: string | undefined;
  topic: string | undefined;
  key?: string;
  partition?: string;
  clientProperties: Record<string, string> | undefined;
}
export interface KinesisAction {
  roleArn: string | undefined;
  streamName: string | undefined;
  partitionKey?: string;
}
export interface LambdaAction {
  functionArn: string | undefined;
}
export interface LocationTimestamp {
  value: string | undefined;
  unit?: string;
}
export interface LocationAction {
  roleArn: string | undefined;
  trackerName: string | undefined;
  deviceId: string | undefined;
  timestamp?: LocationTimestamp;
  latitude: string | undefined;
  longitude: string | undefined;
}
export interface OpenSearchAction {
  roleArn: string | undefined;
  endpoint: string | undefined;
  index: string | undefined;
  type: string | undefined;
  id: string | undefined;
}
export interface UserProperty {
  key: string | undefined;
  value: string | undefined;
}
export interface MqttHeaders {
  payloadFormatIndicator?: string;
  contentType?: string;
  responseTopic?: string;
  correlationData?: string;
  messageExpiry?: string;
  userProperties?: UserProperty[];
}
export interface RepublishAction {
  roleArn: string | undefined;
  topic: string | undefined;
  qos?: number;
  headers?: MqttHeaders;
}
export declare enum CannedAccessControlList {
  AuthenticatedRead = "authenticated-read",
  AwsExecRead = "aws-exec-read",
  BucketOwnerFullControl = "bucket-owner-full-control",
  BucketOwnerRead = "bucket-owner-read",
  LogDeliveryWrite = "log-delivery-write",
  Private = "private",
  PublicRead = "public-read",
  PublicReadWrite = "public-read-write",
}
export interface S3Action {
  roleArn: string | undefined;
  bucketName: string | undefined;
  key: string | undefined;
  cannedAcl?: CannedAccessControlList | string;
}
export interface SalesforceAction {
  token: string | undefined;
  url: string | undefined;
}
export declare enum MessageFormat {
  JSON = "JSON",
  RAW = "RAW",
}
export interface SnsAction {
  targetArn: string | undefined;
  roleArn: string | undefined;
  messageFormat?: MessageFormat | string;
}
export interface SqsAction {
  roleArn: string | undefined;
  queueUrl: string | undefined;
  useBase64?: boolean;
}
export interface StepFunctionsAction {
  executionNamePrefix?: string;
  stateMachineName: string | undefined;
  roleArn: string | undefined;
}
export interface TimestreamDimension {
  name: string | undefined;
  value: string | undefined;
}
export interface TimestreamTimestamp {
  value: string | undefined;
  unit: string | undefined;
}
export interface TimestreamAction {
  roleArn: string | undefined;
  databaseName: string | undefined;
  tableName: string | undefined;
  dimensions: TimestreamDimension[] | undefined;
  timestamp?: TimestreamTimestamp;
}
export interface Action {
  dynamoDB?: DynamoDBAction;
  dynamoDBv2?: DynamoDBv2Action;
  lambda?: LambdaAction;
  sns?: SnsAction;
  sqs?: SqsAction;
  kinesis?: KinesisAction;
  republish?: RepublishAction;
  s3?: S3Action;
  firehose?: FirehoseAction;
  cloudwatchMetric?: CloudwatchMetricAction;
  cloudwatchAlarm?: CloudwatchAlarmAction;
  cloudwatchLogs?: CloudwatchLogsAction;
  elasticsearch?: ElasticsearchAction;
  salesforce?: SalesforceAction;
  iotAnalytics?: IotAnalyticsAction;
  iotEvents?: IotEventsAction;
  iotSiteWise?: IotSiteWiseAction;
  stepFunctions?: StepFunctionsAction;
  timestream?: TimestreamAction;
  http?: HttpAction;
  kafka?: KafkaAction;
  openSearch?: OpenSearchAction;
  location?: LocationAction;
}
export declare enum ActionType {
  CONNECT = "CONNECT",
  PUBLISH = "PUBLISH",
  RECEIVE = "RECEIVE",
  SUBSCRIBE = "SUBSCRIBE",
}
export declare enum ComparisonOperator {
  GREATER_THAN = "greater-than",
  GREATER_THAN_EQUALS = "greater-than-equals",
  IN_CIDR_SET = "in-cidr-set",
  IN_PORT_SET = "in-port-set",
  IN_SET = "in-set",
  LESS_THAN = "less-than",
  LESS_THAN_EQUALS = "less-than-equals",
  NOT_IN_CIDR_SET = "not-in-cidr-set",
  NOT_IN_PORT_SET = "not-in-port-set",
  NOT_IN_SET = "not-in-set",
}
export declare enum ConfidenceLevel {
  HIGH = "HIGH",
  LOW = "LOW",
  MEDIUM = "MEDIUM",
}
export interface MachineLearningDetectionConfig {
  confidenceLevel: ConfidenceLevel | string | undefined;
}
export interface StatisticalThreshold {
  statistic?: string;
}
export interface MetricValue {
  count?: number;
  cidrs?: string[];
  ports?: number[];
  number?: number;
  numbers?: number[];
  strings?: string[];
}
export interface BehaviorCriteria {
  comparisonOperator?: ComparisonOperator | string;
  value?: MetricValue;
  durationSeconds?: number;
  consecutiveDatapointsToAlarm?: number;
  consecutiveDatapointsToClear?: number;
  statisticalThreshold?: StatisticalThreshold;
  mlDetectionConfig?: MachineLearningDetectionConfig;
}
export declare enum DimensionValueOperator {
  IN = "IN",
  NOT_IN = "NOT_IN",
}
export interface MetricDimension {
  dimensionName: string | undefined;
  operator?: DimensionValueOperator | string;
}
export interface Behavior {
  name: string | undefined;
  metric?: string;
  metricDimension?: MetricDimension;
  criteria?: BehaviorCriteria;
  suppressAlerts?: boolean;
}
export declare enum VerificationState {
  BENIGN_POSITIVE = "BENIGN_POSITIVE",
  FALSE_POSITIVE = "FALSE_POSITIVE",
  TRUE_POSITIVE = "TRUE_POSITIVE",
  UNKNOWN = "UNKNOWN",
}
export interface ViolationEventAdditionalInfo {
  confidenceLevel?: ConfidenceLevel | string;
}
export interface ActiveViolation {
  violationId?: string;
  thingName?: string;
  securityProfileName?: string;
  behavior?: Behavior;
  lastViolationValue?: MetricValue;
  violationEventAdditionalInfo?: ViolationEventAdditionalInfo;
  verificationState?: VerificationState | string;
  verificationStateDescription?: string;
  lastViolationTime?: Date;
  violationStartTime?: Date;
}
export interface MetricToRetain {
  metric: string | undefined;
  metricDimension?: MetricDimension;
}
export interface AddThingsToThingGroupParams {
  thingGroupNames: string[] | undefined;
  overrideDynamicGroups?: boolean;
}
export interface AddThingToBillingGroupRequest {
  billingGroupName?: string;
  billingGroupArn?: string;
  thingName?: string;
  thingArn?: string;
}
export interface AddThingToBillingGroupResponse {}
export interface AddThingToThingGroupRequest {
  thingGroupName?: string;
  thingGroupArn?: string;
  thingName?: string;
  thingArn?: string;
  overrideDynamicGroups?: boolean;
}
export interface AddThingToThingGroupResponse {}
export declare enum AggregationTypeName {
  CARDINALITY = "Cardinality",
  PERCENTILES = "Percentiles",
  STATISTICS = "Statistics",
}
export interface AggregationType {
  name: AggregationTypeName | string | undefined;
  values?: string[];
}
export interface AlertTarget {
  alertTargetArn: string | undefined;
  roleArn: string | undefined;
}
export declare enum AlertTargetType {
  SNS = "SNS",
}
export interface Policy {
  policyName?: string;
  policyArn?: string;
}
export interface Allowed {
  policies?: Policy[];
}
export interface AssociateTargetsWithJobRequest {
  targets: string[] | undefined;
  jobId: string | undefined;
  comment?: string;
  namespaceId?: string;
}
export interface AssociateTargetsWithJobResponse {
  jobArn?: string;
  jobId?: string;
  description?: string;
}
export declare class LimitExceededException extends __BaseException {
  readonly name: "LimitExceededException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<LimitExceededException, __BaseException>
  );
}
export interface AttachPolicyRequest {
  policyName: string | undefined;
  target: string | undefined;
}
export interface AttachPrincipalPolicyRequest {
  policyName: string | undefined;
  principal: string | undefined;
}
export interface AttachSecurityProfileRequest {
  securityProfileName: string | undefined;
  securityProfileTargetArn: string | undefined;
}
export interface AttachSecurityProfileResponse {}
export declare class VersionConflictException extends __BaseException {
  readonly name: "VersionConflictException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<VersionConflictException, __BaseException>
  );
}
export interface AttachThingPrincipalRequest {
  thingName: string | undefined;
  principal: string | undefined;
}
export interface AttachThingPrincipalResponse {}
export interface AttributePayload {
  attributes?: Record<string, string>;
  merge?: boolean;
}
export interface AuditCheckConfiguration {
  enabled?: boolean;
}
export declare enum AuditCheckRunStatus {
  CANCELED = "CANCELED",
  COMPLETED_COMPLIANT = "COMPLETED_COMPLIANT",
  COMPLETED_NON_COMPLIANT = "COMPLETED_NON_COMPLIANT",
  FAILED = "FAILED",
  IN_PROGRESS = "IN_PROGRESS",
  WAITING_FOR_DATA_COLLECTION = "WAITING_FOR_DATA_COLLECTION",
}
export interface AuditCheckDetails {
  checkRunStatus?: AuditCheckRunStatus | string;
  checkCompliant?: boolean;
  totalResourcesCount?: number;
  nonCompliantResourcesCount?: number;
  suppressedNonCompliantResourcesCount?: number;
  errorCode?: string;
  message?: string;
}
export interface IssuerCertificateIdentifier {
  issuerCertificateSubject?: string;
  issuerId?: string;
  issuerCertificateSerialNumber?: string;
}
export interface PolicyVersionIdentifier {
  policyName?: string;
  policyVersionId?: string;
}
export interface ResourceIdentifier {
  deviceCertificateId?: string;
  caCertificateId?: string;
  cognitoIdentityPoolId?: string;
  clientId?: string;
  policyVersionIdentifier?: PolicyVersionIdentifier;
  account?: string;
  iamRoleArn?: string;
  roleAliasArn?: string;
  issuerCertificateIdentifier?: IssuerCertificateIdentifier;
  deviceCertificateArn?: string;
}
export declare enum ResourceType {
  ACCOUNT_SETTINGS = "ACCOUNT_SETTINGS",
  CA_CERTIFICATE = "CA_CERTIFICATE",
  CLIENT_ID = "CLIENT_ID",
  COGNITO_IDENTITY_POOL = "COGNITO_IDENTITY_POOL",
  DEVICE_CERTIFICATE = "DEVICE_CERTIFICATE",
  IAM_ROLE = "IAM_ROLE",
  IOT_POLICY = "IOT_POLICY",
  ISSUER_CERTIFICATE = "ISSUER_CERTIFICATE",
  ROLE_ALIAS = "ROLE_ALIAS",
}
export interface NonCompliantResource {
  resourceType?: ResourceType | string;
  resourceIdentifier?: ResourceIdentifier;
  additionalInfo?: Record<string, string>;
}
export interface RelatedResource {
  resourceType?: ResourceType | string;
  resourceIdentifier?: ResourceIdentifier;
  additionalInfo?: Record<string, string>;
}
export declare enum AuditFindingSeverity {
  CRITICAL = "CRITICAL",
  HIGH = "HIGH",
  LOW = "LOW",
  MEDIUM = "MEDIUM",
}
export interface AuditFinding {
  findingId?: string;
  taskId?: string;
  checkName?: string;
  taskStartTime?: Date;
  findingTime?: Date;
  severity?: AuditFindingSeverity | string;
  nonCompliantResource?: NonCompliantResource;
  relatedResources?: RelatedResource[];
  reasonForNonCompliance?: string;
  reasonForNonComplianceCode?: string;
  isSuppressed?: boolean;
}
export declare enum AuditFrequency {
  BIWEEKLY = "BIWEEKLY",
  DAILY = "DAILY",
  MONTHLY = "MONTHLY",
  WEEKLY = "WEEKLY",
}
export declare enum AuditMitigationActionsExecutionStatus {
  CANCELED = "CANCELED",
  COMPLETED = "COMPLETED",
  FAILED = "FAILED",
  IN_PROGRESS = "IN_PROGRESS",
  PENDING = "PENDING",
  SKIPPED = "SKIPPED",
}
export interface AuditMitigationActionExecutionMetadata {
  taskId?: string;
  findingId?: string;
  actionName?: string;
  actionId?: string;
  status?: AuditMitigationActionsExecutionStatus | string;
  startTime?: Date;
  endTime?: Date;
  errorCode?: string;
  message?: string;
}
export declare enum AuditMitigationActionsTaskStatus {
  CANCELED = "CANCELED",
  COMPLETED = "COMPLETED",
  FAILED = "FAILED",
  IN_PROGRESS = "IN_PROGRESS",
}
export interface AuditMitigationActionsTaskMetadata {
  taskId?: string;
  startTime?: Date;
  taskStatus?: AuditMitigationActionsTaskStatus | string;
}
export interface TaskStatisticsForAuditCheck {
  totalFindingsCount?: number;
  failedFindingsCount?: number;
  succeededFindingsCount?: number;
  skippedFindingsCount?: number;
  canceledFindingsCount?: number;
}
export interface AuditMitigationActionsTaskTarget {
  auditTaskId?: string;
  findingIds?: string[];
  auditCheckToReasonCodeFilter?: Record<string, string[]>;
}
export interface AuditNotificationTarget {
  targetArn?: string;
  roleArn?: string;
  enabled?: boolean;
}
export declare enum AuditNotificationType {
  SNS = "SNS",
}
export interface AuditSuppression {
  checkName: string | undefined;
  resourceIdentifier: ResourceIdentifier | undefined;
  expirationDate?: Date;
  suppressIndefinitely?: boolean;
  description?: string;
}
export declare enum AuditTaskStatus {
  CANCELED = "CANCELED",
  COMPLETED = "COMPLETED",
  FAILED = "FAILED",
  IN_PROGRESS = "IN_PROGRESS",
}
export declare enum AuditTaskType {
  ON_DEMAND_AUDIT_TASK = "ON_DEMAND_AUDIT_TASK",
  SCHEDULED_AUDIT_TASK = "SCHEDULED_AUDIT_TASK",
}
export interface AuditTaskMetadata {
  taskId?: string;
  taskStatus?: AuditTaskStatus | string;
  taskType?: AuditTaskType | string;
}
export declare enum AuthDecision {
  ALLOWED = "ALLOWED",
  EXPLICIT_DENY = "EXPLICIT_DENY",
  IMPLICIT_DENY = "IMPLICIT_DENY",
}
export interface AuthInfo {
  actionType?: ActionType | string;
  resources: string[] | undefined;
}
export interface AuthorizerConfig {
  defaultAuthorizerName?: string;
  allowAuthorizerOverride?: boolean;
}
export declare enum AuthorizerStatus {
  ACTIVE = "ACTIVE",
  INACTIVE = "INACTIVE",
}
export interface AuthorizerDescription {
  authorizerName?: string;
  authorizerArn?: string;
  authorizerFunctionArn?: string;
  tokenKeyName?: string;
  tokenSigningPublicKeys?: Record<string, string>;
  status?: AuthorizerStatus | string;
  creationDate?: Date;
  lastModifiedDate?: Date;
  signingDisabled?: boolean;
  enableCachingForHttp?: boolean;
}
export interface AuthorizerSummary {
  authorizerName?: string;
  authorizerArn?: string;
}
export interface ExplicitDeny {
  policies?: Policy[];
}
export interface ImplicitDeny {
  policies?: Policy[];
}
export interface Denied {
  implicitDeny?: ImplicitDeny;
  explicitDeny?: ExplicitDeny;
}
export interface AuthResult {
  authInfo?: AuthInfo;
  allowed?: Allowed;
  denied?: Denied;
  authDecision?: AuthDecision | string;
  missingContextValues?: string[];
}
export declare enum AutoRegistrationStatus {
  DISABLE = "DISABLE",
  ENABLE = "ENABLE",
}
export interface CancelAuditMitigationActionsTaskRequest {
  taskId: string | undefined;
}
export interface CancelAuditMitigationActionsTaskResponse {}
export interface CancelAuditTaskRequest {
  taskId: string | undefined;
}
export interface CancelAuditTaskResponse {}
export interface CancelCertificateTransferRequest {
  certificateId: string | undefined;
}
export interface CancelDetectMitigationActionsTaskRequest {
  taskId: string | undefined;
}
export interface CancelDetectMitigationActionsTaskResponse {}
export interface CancelJobRequest {
  jobId: string | undefined;
  reasonCode?: string;
  comment?: string;
  force?: boolean;
}
export interface CancelJobResponse {
  jobArn?: string;
  jobId?: string;
  description?: string;
}
export interface CancelJobExecutionRequest {
  jobId: string | undefined;
  thingName: string | undefined;
  force?: boolean;
  expectedVersion?: number;
  statusDetails?: Record<string, string>;
}
export declare class InvalidStateTransitionException extends __BaseException {
  readonly name: "InvalidStateTransitionException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      InvalidStateTransitionException,
      __BaseException
    >
  );
}
export interface ClearDefaultAuthorizerRequest {}
export interface ClearDefaultAuthorizerResponse {}
export interface ConfirmTopicRuleDestinationRequest {
  confirmationToken: string | undefined;
}
export interface ConfirmTopicRuleDestinationResponse {}
export declare class ConflictingResourceUpdateException extends __BaseException {
  readonly name: "ConflictingResourceUpdateException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      ConflictingResourceUpdateException,
      __BaseException
    >
  );
}
export declare class InternalException extends __BaseException {
  readonly name: "InternalException";
  readonly $fault: "server";
  constructor(opts: __ExceptionOptionType<InternalException, __BaseException>);
}
export interface CreateAuditSuppressionRequest {
  checkName: string | undefined;
  resourceIdentifier: ResourceIdentifier | undefined;
  expirationDate?: Date;
  suppressIndefinitely?: boolean;
  description?: string;
  clientRequestToken?: string;
}
export interface CreateAuditSuppressionResponse {}
export declare class ResourceAlreadyExistsException extends __BaseException {
  readonly name: "ResourceAlreadyExistsException";
  readonly $fault: "client";
  resourceId?: string;
  resourceArn?: string;
  constructor(
    opts: __ExceptionOptionType<ResourceAlreadyExistsException, __BaseException>
  );
}
export interface Tag {
  Key: string | undefined;
  Value?: string;
}
export interface CreateAuthorizerRequest {
  authorizerName: string | undefined;
  authorizerFunctionArn: string | undefined;
  tokenKeyName?: string;
  tokenSigningPublicKeys?: Record<string, string>;
  status?: AuthorizerStatus | string;
  tags?: Tag[];
  signingDisabled?: boolean;
  enableCachingForHttp?: boolean;
}
export interface CreateAuthorizerResponse {
  authorizerName?: string;
  authorizerArn?: string;
}
export interface BillingGroupProperties {
  billingGroupDescription?: string;
}
export interface CreateBillingGroupRequest {
  billingGroupName: string | undefined;
  billingGroupProperties?: BillingGroupProperties;
  tags?: Tag[];
}
export interface CreateBillingGroupResponse {
  billingGroupName?: string;
  billingGroupArn?: string;
  billingGroupId?: string;
}
export interface CreateCertificateFromCsrRequest {
  certificateSigningRequest: string | undefined;
  setAsActive?: boolean;
}
export interface CreateCertificateFromCsrResponse {
  certificateArn?: string;
  certificateId?: string;
  certificatePem?: string;
}
export declare enum CustomMetricType {
  IP_ADDRESS_LIST = "ip-address-list",
  NUMBER = "number",
  NUMBER_LIST = "number-list",
  STRING_LIST = "string-list",
}
export interface CreateCustomMetricRequest {
  metricName: string | undefined;
  displayName?: string;
  metricType: CustomMetricType | string | undefined;
  tags?: Tag[];
  clientRequestToken?: string;
}
export interface CreateCustomMetricResponse {
  metricName?: string;
  metricArn?: string;
}
export declare enum DimensionType {
  TOPIC_FILTER = "TOPIC_FILTER",
}
export interface CreateDimensionRequest {
  name: string | undefined;
  type: DimensionType | string | undefined;
  stringValues: string[] | undefined;
  tags?: Tag[];
  clientRequestToken?: string;
}
export interface CreateDimensionResponse {
  name?: string;
  arn?: string;
}
export declare class CertificateValidationException extends __BaseException {
  readonly name: "CertificateValidationException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<CertificateValidationException, __BaseException>
  );
}
export declare enum ServiceType {
  CREDENTIAL_PROVIDER = "CREDENTIAL_PROVIDER",
  DATA = "DATA",
  JOBS = "JOBS",
}
export interface CreateDomainConfigurationRequest {
  domainConfigurationName: string | undefined;
  domainName?: string;
  serverCertificateArns?: string[];
  validationCertificateArn?: string;
  authorizerConfig?: AuthorizerConfig;
  serviceType?: ServiceType | string;
  tags?: Tag[];
}
export interface CreateDomainConfigurationResponse {
  domainConfigurationName?: string;
  domainConfigurationArn?: string;
}
export interface ThingGroupProperties {
  thingGroupDescription?: string;
  attributePayload?: AttributePayload;
}
export interface CreateDynamicThingGroupRequest {
  thingGroupName: string | undefined;
  thingGroupProperties?: ThingGroupProperties;
  indexName?: string;
  queryString: string | undefined;
  queryVersion?: string;
  tags?: Tag[];
}
export interface CreateDynamicThingGroupResponse {
  thingGroupName?: string;
  thingGroupArn?: string;
  thingGroupId?: string;
  indexName?: string;
  queryString?: string;
  queryVersion?: string;
}
export declare class InvalidQueryException extends __BaseException {
  readonly name: "InvalidQueryException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidQueryException, __BaseException>
  );
}
export declare enum FleetMetricUnit {
  Bits = "Bits",
  BitsSecond = "Bits/Second",
  Bytes = "Bytes",
  BytesSecond = "Bytes/Second",
  Count = "Count",
  CountSecond = "Count/Second",
  Gigabits = "Gigabits",
  GigabitsSecond = "Gigabits/Second",
  Gigabytes = "Gigabytes",
  GigabytesSecond = "Gigabytes/Second",
  Kilobits = "Kilobits",
  KilobitsSecond = "Kilobits/Second",
  Kilobytes = "Kilobytes",
  KilobytesSecond = "Kilobytes/Second",
  Megabits = "Megabits",
  MegabitsSecond = "Megabits/Second",
  Megabytes = "Megabytes",
  MegabytesSecond = "Megabytes/Second",
  Microseconds = "Microseconds",
  Milliseconds = "Milliseconds",
  None = "None",
  Percent = "Percent",
  Seconds = "Seconds",
  Terabits = "Terabits",
  TerabitsSecond = "Terabits/Second",
  Terabytes = "Terabytes",
  TerabytesSecond = "Terabytes/Second",
}
export interface CreateFleetMetricRequest {
  metricName: string | undefined;
  queryString: string | undefined;
  aggregationType: AggregationType | undefined;
  period: number | undefined;
  aggregationField: string | undefined;
  description?: string;
  queryVersion?: string;
  indexName?: string;
  unit?: FleetMetricUnit | string;
  tags?: Tag[];
}
export interface CreateFleetMetricResponse {
  metricName?: string;
  metricArn?: string;
}
export declare class IndexNotReadyException extends __BaseException {
  readonly name: "IndexNotReadyException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<IndexNotReadyException, __BaseException>
  );
}
export declare class InvalidAggregationException extends __BaseException {
  readonly name: "InvalidAggregationException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidAggregationException, __BaseException>
  );
}
export declare enum RetryableFailureType {
  ALL = "ALL",
  FAILED = "FAILED",
  TIMED_OUT = "TIMED_OUT",
}
export interface RetryCriteria {
  failureType: RetryableFailureType | string | undefined;
  numberOfRetries: number | undefined;
}
export interface JobExecutionsRetryConfig {
  criteriaList: RetryCriteria[] | undefined;
}
export interface RateIncreaseCriteria {
  numberOfNotifiedThings?: number;
  numberOfSucceededThings?: number;
}
export interface ExponentialRolloutRate {
  baseRatePerMinute: number | undefined;
  incrementFactor: number | undefined;
  rateIncreaseCriteria: RateIncreaseCriteria | undefined;
}
export interface JobExecutionsRolloutConfig {
  maximumPerMinute?: number;
  exponentialRate?: ExponentialRolloutRate;
}
export interface PresignedUrlConfig {
  roleArn?: string;
  expiresInSec?: number;
}
export declare enum JobEndBehavior {
  CANCEL = "CANCEL",
  FORCE_CANCEL = "FORCE_CANCEL",
  STOP_ROLLOUT = "STOP_ROLLOUT",
}
export interface MaintenanceWindow {
  startTime: string | undefined;
  durationInMinutes: number | undefined;
}
export interface SchedulingConfig {
  startTime?: string;
  endTime?: string;
  endBehavior?: JobEndBehavior | string;
  maintenanceWindows?: MaintenanceWindow[];
}
export declare enum TargetSelection {
  CONTINUOUS = "CONTINUOUS",
  SNAPSHOT = "SNAPSHOT",
}
export interface TimeoutConfig {
  inProgressTimeoutInMinutes?: number;
}
export interface CreateJobRequest {
  jobId: string | undefined;
  targets: string[] | undefined;
  documentSource?: string;
  document?: string;
  description?: string;
  presignedUrlConfig?: PresignedUrlConfig;
  targetSelection?: TargetSelection | string;
  jobExecutionsRolloutConfig?: JobExecutionsRolloutConfig;
  abortConfig?: AbortConfig;
  timeoutConfig?: TimeoutConfig;
  tags?: Tag[];
  namespaceId?: string;
  jobTemplateArn?: string;
  jobExecutionsRetryConfig?: JobExecutionsRetryConfig;
  documentParameters?: Record<string, string>;
  schedulingConfig?: SchedulingConfig;
}
export interface CreateJobResponse {
  jobArn?: string;
  jobId?: string;
  description?: string;
}
export declare class ConflictException extends __BaseException {
  readonly name: "ConflictException";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
}
export interface CreateJobTemplateRequest {
  jobTemplateId: string | undefined;
  jobArn?: string;
  documentSource?: string;
  document?: string;
  description: string | undefined;
  presignedUrlConfig?: PresignedUrlConfig;
  jobExecutionsRolloutConfig?: JobExecutionsRolloutConfig;
  abortConfig?: AbortConfig;
  timeoutConfig?: TimeoutConfig;
  tags?: Tag[];
  jobExecutionsRetryConfig?: JobExecutionsRetryConfig;
  maintenanceWindows?: MaintenanceWindow[];
}
export interface CreateJobTemplateResponse {
  jobTemplateArn?: string;
  jobTemplateId?: string;
}
export interface CreateKeysAndCertificateRequest {
  setAsActive?: boolean;
}
export interface KeyPair {
  PublicKey?: string;
  PrivateKey?: string;
}
export interface CreateKeysAndCertificateResponse {
  certificateArn?: string;
  certificateId?: string;
  certificatePem?: string;
  keyPair?: KeyPair;
}
export declare enum LogLevel {
  DEBUG = "DEBUG",
  DISABLED = "DISABLED",
  ERROR = "ERROR",
  INFO = "INFO",
  WARN = "WARN",
}
export interface EnableIoTLoggingParams {
  roleArnForLogging: string | undefined;
  logLevel: LogLevel | string | undefined;
}
export interface PublishFindingToSnsParams {
  topicArn: string | undefined;
}
export declare enum PolicyTemplateName {
  BLANK_POLICY = "BLANK_POLICY",
}
export interface ReplaceDefaultPolicyVersionParams {
  templateName: PolicyTemplateName | string | undefined;
}
export declare enum CACertificateUpdateAction {
  DEACTIVATE = "DEACTIVATE",
}
export interface UpdateCACertificateParams {
  action: CACertificateUpdateAction | string | undefined;
}
export declare enum DeviceCertificateUpdateAction {
  DEACTIVATE = "DEACTIVATE",
}
export interface UpdateDeviceCertificateParams {
  action: DeviceCertificateUpdateAction | string | undefined;
}
export interface MitigationActionParams {
  updateDeviceCertificateParams?: UpdateDeviceCertificateParams;
  updateCACertificateParams?: UpdateCACertificateParams;
  addThingsToThingGroupParams?: AddThingsToThingGroupParams;
  replaceDefaultPolicyVersionParams?: ReplaceDefaultPolicyVersionParams;
  enableIoTLoggingParams?: EnableIoTLoggingParams;
  publishFindingToSnsParams?: PublishFindingToSnsParams;
}
export interface CreateMitigationActionRequest {
  actionName: string | undefined;
  roleArn: string | undefined;
  actionParams: MitigationActionParams | undefined;
  tags?: Tag[];
}
export interface CreateMitigationActionResponse {
  actionArn?: string;
  actionId?: string;
}
export declare enum AwsJobAbortCriteriaAbortAction {
  CANCEL = "CANCEL",
}
export declare enum AwsJobAbortCriteriaFailureType {
  ALL = "ALL",
  FAILED = "FAILED",
  REJECTED = "REJECTED",
  TIMED_OUT = "TIMED_OUT",
}
export interface AwsJobAbortCriteria {
  failureType: AwsJobAbortCriteriaFailureType | string | undefined;
  action: AwsJobAbortCriteriaAbortAction | string | undefined;
  thresholdPercentage: number | undefined;
  minNumberOfExecutedThings: number | undefined;
}
export interface AwsJobAbortConfig {
  abortCriteriaList: AwsJobAbortCriteria[] | undefined;
}
export interface AwsJobRateIncreaseCriteria {
  numberOfNotifiedThings?: number;
  numberOfSucceededThings?: number;
}
export interface AwsJobExponentialRolloutRate {
  baseRatePerMinute: number | undefined;
  incrementFactor: number | undefined;
  rateIncreaseCriteria: AwsJobRateIncreaseCriteria | undefined;
}
export interface AwsJobExecutionsRolloutConfig {
  maximumPerMinute?: number;
  exponentialRate?: AwsJobExponentialRolloutRate;
}
export interface AwsJobPresignedUrlConfig {
  expiresInSec?: number;
}
export interface AwsJobTimeoutConfig {
  inProgressTimeoutInMinutes?: number;
}
export interface CodeSigningCertificateChain {
  certificateName?: string;
  inlineDocument?: string;
}
export interface CodeSigningSignature {
  inlineDocument?: Uint8Array;
}
export interface CustomCodeSigning {
  signature?: CodeSigningSignature;
  certificateChain?: CodeSigningCertificateChain;
  hashAlgorithm?: string;
  signatureAlgorithm?: string;
}
export interface S3Destination {
  bucket?: string;
  prefix?: string;
}
export interface Destination {
  s3Destination?: S3Destination;
}
export interface SigningProfileParameter {
  certificateArn?: string;
  platform?: string;
  certificatePathOnDevice?: string;
}
export interface StartSigningJobParameter {
  signingProfileParameter?: SigningProfileParameter;
  signingProfileName?: string;
  destination?: Destination;
}
export interface CodeSigning {
  awsSignerJobId?: string;
  startSigningJobParameter?: StartSigningJobParameter;
  customCodeSigning?: CustomCodeSigning;
}
export interface S3Location {
  bucket?: string;
  key?: string;
  version?: string;
}
export interface _Stream {
  streamId?: string;
  fileId?: number;
}
export interface FileLocation {
  stream?: _Stream;
  s3Location?: S3Location;
}
export interface OTAUpdateFile {
  fileName?: string;
  fileType?: number;
  fileVersion?: string;
  fileLocation?: FileLocation;
  codeSigning?: CodeSigning;
  attributes?: Record<string, string>;
}
export declare enum Protocol {
  HTTP = "HTTP",
  MQTT = "MQTT",
}
export interface CreateOTAUpdateRequest {
  otaUpdateId: string | undefined;
  description?: string;
  targets: string[] | undefined;
  protocols?: (Protocol | string)[];
  targetSelection?: TargetSelection | string;
  awsJobExecutionsRolloutConfig?: AwsJobExecutionsRolloutConfig;
  awsJobPresignedUrlConfig?: AwsJobPresignedUrlConfig;
  awsJobAbortConfig?: AwsJobAbortConfig;
  awsJobTimeoutConfig?: AwsJobTimeoutConfig;
  files: OTAUpdateFile[] | undefined;
  roleArn: string | undefined;
  additionalParameters?: Record<string, string>;
  tags?: Tag[];
}
export declare enum OTAUpdateStatus {
  CREATE_COMPLETE = "CREATE_COMPLETE",
  CREATE_FAILED = "CREATE_FAILED",
  CREATE_IN_PROGRESS = "CREATE_IN_PROGRESS",
  CREATE_PENDING = "CREATE_PENDING",
}
export interface CreateOTAUpdateResponse {
  otaUpdateId?: string;
  awsIotJobId?: string;
  otaUpdateArn?: string;
  awsIotJobArn?: string;
  otaUpdateStatus?: OTAUpdateStatus | string;
}
export interface CreatePolicyRequest {
  policyName: string | undefined;
  policyDocument: string | undefined;
  tags?: Tag[];
}
export interface CreatePolicyResponse {
  policyName?: string;
  policyArn?: string;
  policyDocument?: string;
  policyVersionId?: string;
}
export declare class MalformedPolicyException extends __BaseException {
  readonly name: "MalformedPolicyException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<MalformedPolicyException, __BaseException>
  );
}
export interface CreatePolicyVersionRequest {
  policyName: string | undefined;
  policyDocument: string | undefined;
  setAsDefault?: boolean;
}
export interface CreatePolicyVersionResponse {
  policyArn?: string;
  policyDocument?: string;
  policyVersionId?: string;
  isDefaultVersion?: boolean;
}
export declare class VersionsLimitExceededException extends __BaseException {
  readonly name: "VersionsLimitExceededException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<VersionsLimitExceededException, __BaseException>
  );
}
export interface CreateProvisioningClaimRequest {
  templateName: string | undefined;
}
export interface CreateProvisioningClaimResponse {
  certificateId?: string;
  certificatePem?: string;
  keyPair?: KeyPair;
  expiration?: Date;
}
export interface ProvisioningHook {
  payloadVersion?: string;
  targetArn: string | undefined;
}
export declare enum TemplateType {
  FLEET_PROVISIONING = "FLEET_PROVISIONING",
  JITP = "JITP",
}
export interface CreateProvisioningTemplateRequest {
  templateName: string | undefined;
  description?: string;
  templateBody: string | undefined;
  enabled?: boolean;
  provisioningRoleArn: string | undefined;
  preProvisioningHook?: ProvisioningHook;
  tags?: Tag[];
  type?: TemplateType | string;
}
export interface CreateProvisioningTemplateResponse {
  templateArn?: string;
  templateName?: string;
  defaultVersionId?: number;
}
export interface CreateProvisioningTemplateVersionRequest {
  templateName: string | undefined;
  templateBody: string | undefined;
  setAsDefault?: boolean;
}
export interface CreateProvisioningTemplateVersionResponse {
  templateArn?: string;
  templateName?: string;
  versionId?: number;
  isDefaultVersion?: boolean;
}
export interface CreateRoleAliasRequest {
  roleAlias: string | undefined;
  roleArn: string | undefined;
  credentialDurationSeconds?: number;
  tags?: Tag[];
}
export interface CreateRoleAliasResponse {
  roleAlias?: string;
  roleAliasArn?: string;
}
export declare enum DayOfWeek {
  FRI = "FRI",
  MON = "MON",
  SAT = "SAT",
  SUN = "SUN",
  THU = "THU",
  TUE = "TUE",
  WED = "WED",
}
export interface CreateScheduledAuditRequest {
  frequency: AuditFrequency | string | undefined;
  dayOfMonth?: string;
  dayOfWeek?: DayOfWeek | string;
  targetCheckNames: string[] | undefined;
  scheduledAuditName: string | undefined;
  tags?: Tag[];
}
export interface CreateScheduledAuditResponse {
  scheduledAuditArn?: string;
}
export interface CreateSecurityProfileRequest {
  securityProfileName: string | undefined;
  securityProfileDescription?: string;
  behaviors?: Behavior[];
  alertTargets?: Record<string, AlertTarget>;
  additionalMetricsToRetain?: string[];
  additionalMetricsToRetainV2?: MetricToRetain[];
  tags?: Tag[];
}
export interface CreateSecurityProfileResponse {
  securityProfileName?: string;
  securityProfileArn?: string;
}
export interface StreamFile {
  fileId?: number;
  s3Location?: S3Location;
}
export interface CreateStreamRequest {
  streamId: string | undefined;
  description?: string;
  files: StreamFile[] | undefined;
  roleArn: string | undefined;
  tags?: Tag[];
}
export interface CreateStreamResponse {
  streamId?: string;
  streamArn?: string;
  description?: string;
  streamVersion?: number;
}
export interface CreateThingRequest {
  thingName: string | undefined;
  thingTypeName?: string;
  attributePayload?: AttributePayload;
  billingGroupName?: string;
}
export interface CreateThingResponse {
  thingName?: string;
  thingArn?: string;
  thingId?: string;
}
export interface CreateThingGroupRequest {
  thingGroupName: string | undefined;
  parentGroupName?: string;
  thingGroupProperties?: ThingGroupProperties;
  tags?: Tag[];
}
export interface CreateThingGroupResponse {
  thingGroupName?: string;
  thingGroupArn?: string;
  thingGroupId?: string;
}
export interface ThingTypeProperties {
  thingTypeDescription?: string;
  searchableAttributes?: string[];
}
export interface CreateThingTypeRequest {
  thingTypeName: string | undefined;
  thingTypeProperties?: ThingTypeProperties;
  tags?: Tag[];
}
export interface CreateThingTypeResponse {
  thingTypeName?: string;
  thingTypeArn?: string;
  thingTypeId?: string;
}
export interface TopicRulePayload {
  sql: string | undefined;
  description?: string;
  actions: Action[] | undefined;
  ruleDisabled?: boolean;
  awsIotSqlVersion?: string;
  errorAction?: Action;
}
export interface CreateTopicRuleRequest {
  ruleName: string | undefined;
  topicRulePayload: TopicRulePayload | undefined;
  tags?: string;
}
export declare class SqlParseException extends __BaseException {
  readonly name: "SqlParseException";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<SqlParseException, __BaseException>);
}
export interface HttpUrlDestinationConfiguration {
  confirmationUrl: string | undefined;
}
export interface VpcDestinationConfiguration {
  subnetIds: string[] | undefined;
  securityGroups?: string[];
  vpcId: string | undefined;
  roleArn: string | undefined;
}
export interface TopicRuleDestinationConfiguration {
  httpUrlConfiguration?: HttpUrlDestinationConfiguration;
  vpcConfiguration?: VpcDestinationConfiguration;
}
export interface CreateTopicRuleDestinationRequest {
  destinationConfiguration: TopicRuleDestinationConfiguration | undefined;
}
export interface HttpUrlDestinationProperties {
  confirmationUrl?: string;
}
export declare enum TopicRuleDestinationStatus {
  DELETING = "DELETING",
  DISABLED = "DISABLED",
  ENABLED = "ENABLED",
  ERROR = "ERROR",
  IN_PROGRESS = "IN_PROGRESS",
}
export interface VpcDestinationProperties {
  subnetIds?: string[];
  securityGroups?: string[];
  vpcId?: string;
  roleArn?: string;
}
export interface TopicRuleDestination {
  arn?: string;
  status?: TopicRuleDestinationStatus | string;
  createdAt?: Date;
  lastUpdatedAt?: Date;
  statusReason?: string;
  httpUrlProperties?: HttpUrlDestinationProperties;
  vpcProperties?: VpcDestinationProperties;
}
export interface CreateTopicRuleDestinationResponse {
  topicRuleDestination?: TopicRuleDestination;
}
export interface DeleteAccountAuditConfigurationRequest {
  deleteScheduledAudits?: boolean;
}
export interface DeleteAccountAuditConfigurationResponse {}
export interface DeleteAuditSuppressionRequest {
  checkName: string | undefined;
  resourceIdentifier: ResourceIdentifier | undefined;
}
export interface DeleteAuditSuppressionResponse {}
export interface DeleteAuthorizerRequest {
  authorizerName: string | undefined;
}
export interface DeleteAuthorizerResponse {}
export declare class DeleteConflictException extends __BaseException {
  readonly name: "DeleteConflictException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<DeleteConflictException, __BaseException>
  );
}
export interface DeleteBillingGroupRequest {
  billingGroupName: string | undefined;
  expectedVersion?: number;
}
export interface DeleteBillingGroupResponse {}
export declare class CertificateStateException extends __BaseException {
  readonly name: "CertificateStateException";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<CertificateStateException, __BaseException>
  );
}
export interface DeleteCACertificateRequest {
  certificateId: string | undefined;
}
export interface DeleteCACertificateResponse {}
export interface DeleteCertificateRequest {
  certificateId: string | undefined;
  forceDelete?: boolean;
}
export interface DeleteCustomMetricRequest {
  metricName: string | undefined;
}
export interface DeleteCustomMetricResponse {}
export interface DeleteDimensionRequest {
  name: string | undefined;
}
export interface DeleteDimensionResponse {}
export interface DeleteDomainConfigurationRequest {
  domainConfigurationName: string | undefined;
}
export interface DeleteDomainConfigurationResponse {}
export interface DeleteDynamicThingGroupRequest {
  thingGroupName: string | undefined;
  expectedVersion?: number;
}
export interface DeleteDynamicThingGroupResponse {}
export interface DeleteFleetMetricRequest {
  metricName: string | undefined;
  expectedVersion?: number;
}
export interface DeleteJobRequest {
  jobId: string | undefined;
  force?: boolean;
  namespaceId?: string;
}
export interface DeleteJobExecutionRequest {
  jobId: string | undefined;
  thingName: string | undefined;
  executionNumber: number | undefined;
  force?: boolean;
  namespaceId?: string;
}
export interface DeleteJobTemplateRequest {
  jobTemplateId: string | undefined;
}
export interface DeleteMitigationActionRequest {
  actionName: string | undefined;
}
export interface DeleteMitigationActionResponse {}
export interface DeleteOTAUpdateRequest {
  otaUpdateId: string | undefined;
  deleteStream?: boolean;
  forceDeleteAWSJob?: boolean;
}
export interface DeleteOTAUpdateResponse {}
export interface DeletePolicyRequest {
  policyName: string | undefined;
}
export declare const AbortCriteriaFilterSensitiveLog: (
  obj: AbortCriteria
) => any;
export declare const AbortConfigFilterSensitiveLog: (obj: AbortConfig) => any;
export declare const AcceptCertificateTransferRequestFilterSensitiveLog: (
  obj: AcceptCertificateTransferRequest
) => any;
export declare const CloudwatchAlarmActionFilterSensitiveLog: (
  obj: CloudwatchAlarmAction
) => any;
export declare const CloudwatchLogsActionFilterSensitiveLog: (
  obj: CloudwatchLogsAction
) => any;
export declare const CloudwatchMetricActionFilterSensitiveLog: (
  obj: CloudwatchMetricAction
) => any;
export declare const DynamoDBActionFilterSensitiveLog: (
  obj: DynamoDBAction
) => any;
export declare const PutItemInputFilterSensitiveLog: (obj: PutItemInput) => any;
export declare const DynamoDBv2ActionFilterSensitiveLog: (
  obj: DynamoDBv2Action
) => any;
export declare const ElasticsearchActionFilterSensitiveLog: (
  obj: ElasticsearchAction
) => any;
export declare const FirehoseActionFilterSensitiveLog: (
  obj: FirehoseAction
) => any;
export declare const SigV4AuthorizationFilterSensitiveLog: (
  obj: SigV4Authorization
) => any;
export declare const HttpAuthorizationFilterSensitiveLog: (
  obj: HttpAuthorization
) => any;
export declare const HttpActionHeaderFilterSensitiveLog: (
  obj: HttpActionHeader
) => any;
export declare const HttpActionFilterSensitiveLog: (obj: HttpAction) => any;
export declare const IotAnalyticsActionFilterSensitiveLog: (
  obj: IotAnalyticsAction
) => any;
export declare const IotEventsActionFilterSensitiveLog: (
  obj: IotEventsAction
) => any;
export declare const AssetPropertyTimestampFilterSensitiveLog: (
  obj: AssetPropertyTimestamp
) => any;
export declare const AssetPropertyVariantFilterSensitiveLog: (
  obj: AssetPropertyVariant
) => any;
export declare const AssetPropertyValueFilterSensitiveLog: (
  obj: AssetPropertyValue
) => any;
export declare const PutAssetPropertyValueEntryFilterSensitiveLog: (
  obj: PutAssetPropertyValueEntry
) => any;
export declare const IotSiteWiseActionFilterSensitiveLog: (
  obj: IotSiteWiseAction
) => any;
export declare const KafkaActionFilterSensitiveLog: (obj: KafkaAction) => any;
export declare const KinesisActionFilterSensitiveLog: (
  obj: KinesisAction
) => any;
export declare const LambdaActionFilterSensitiveLog: (obj: LambdaAction) => any;
export declare const LocationTimestampFilterSensitiveLog: (
  obj: LocationTimestamp
) => any;
export declare const LocationActionFilterSensitiveLog: (
  obj: LocationAction
) => any;
export declare const OpenSearchActionFilterSensitiveLog: (
  obj: OpenSearchAction
) => any;
export declare const UserPropertyFilterSensitiveLog: (obj: UserProperty) => any;
export declare const MqttHeadersFilterSensitiveLog: (obj: MqttHeaders) => any;
export declare const RepublishActionFilterSensitiveLog: (
  obj: RepublishAction
) => any;
export declare const S3ActionFilterSensitiveLog: (obj: S3Action) => any;
export declare const SalesforceActionFilterSensitiveLog: (
  obj: SalesforceAction
) => any;
export declare const SnsActionFilterSensitiveLog: (obj: SnsAction) => any;
export declare const SqsActionFilterSensitiveLog: (obj: SqsAction) => any;
export declare const StepFunctionsActionFilterSensitiveLog: (
  obj: StepFunctionsAction
) => any;
export declare const TimestreamDimensionFilterSensitiveLog: (
  obj: TimestreamDimension
) => any;
export declare const TimestreamTimestampFilterSensitiveLog: (
  obj: TimestreamTimestamp
) => any;
export declare const TimestreamActionFilterSensitiveLog: (
  obj: TimestreamAction
) => any;
export declare const ActionFilterSensitiveLog: (obj: Action) => any;
export declare const MachineLearningDetectionConfigFilterSensitiveLog: (
  obj: MachineLearningDetectionConfig
) => any;
export declare const StatisticalThresholdFilterSensitiveLog: (
  obj: StatisticalThreshold
) => any;
export declare const MetricValueFilterSensitiveLog: (obj: MetricValue) => any;
export declare const BehaviorCriteriaFilterSensitiveLog: (
  obj: BehaviorCriteria
) => any;
export declare const MetricDimensionFilterSensitiveLog: (
  obj: MetricDimension
) => any;
export declare const BehaviorFilterSensitiveLog: (obj: Behavior) => any;
export declare const ViolationEventAdditionalInfoFilterSensitiveLog: (
  obj: ViolationEventAdditionalInfo
) => any;
export declare const ActiveViolationFilterSensitiveLog: (
  obj: ActiveViolation
) => any;
export declare const MetricToRetainFilterSensitiveLog: (
  obj: MetricToRetain
) => any;
export declare const AddThingsToThingGroupParamsFilterSensitiveLog: (
  obj: AddThingsToThingGroupParams
) => any;
export declare const AddThingToBillingGroupRequestFilterSensitiveLog: (
  obj: AddThingToBillingGroupRequest
) => any;
export declare const AddThingToBillingGroupResponseFilterSensitiveLog: (
  obj: AddThingToBillingGroupResponse
) => any;
export declare const AddThingToThingGroupRequestFilterSensitiveLog: (
  obj: AddThingToThingGroupRequest
) => any;
export declare const AddThingToThingGroupResponseFilterSensitiveLog: (
  obj: AddThingToThingGroupResponse
) => any;
export declare const AggregationTypeFilterSensitiveLog: (
  obj: AggregationType
) => any;
export declare const AlertTargetFilterSensitiveLog: (obj: AlertTarget) => any;
export declare const PolicyFilterSensitiveLog: (obj: Policy) => any;
export declare const AllowedFilterSensitiveLog: (obj: Allowed) => any;
export declare const AssociateTargetsWithJobRequestFilterSensitiveLog: (
  obj: AssociateTargetsWithJobRequest
) => any;
export declare const AssociateTargetsWithJobResponseFilterSensitiveLog: (
  obj: AssociateTargetsWithJobResponse
) => any;
export declare const AttachPolicyRequestFilterSensitiveLog: (
  obj: AttachPolicyRequest
) => any;
export declare const AttachPrincipalPolicyRequestFilterSensitiveLog: (
  obj: AttachPrincipalPolicyRequest
) => any;
export declare const AttachSecurityProfileRequestFilterSensitiveLog: (
  obj: AttachSecurityProfileRequest
) => any;
export declare const AttachSecurityProfileResponseFilterSensitiveLog: (
  obj: AttachSecurityProfileResponse
) => any;
export declare const AttachThingPrincipalRequestFilterSensitiveLog: (
  obj: AttachThingPrincipalRequest
) => any;
export declare const AttachThingPrincipalResponseFilterSensitiveLog: (
  obj: AttachThingPrincipalResponse
) => any;
export declare const AttributePayloadFilterSensitiveLog: (
  obj: AttributePayload
) => any;
export declare const AuditCheckConfigurationFilterSensitiveLog: (
  obj: AuditCheckConfiguration
) => any;
export declare const AuditCheckDetailsFilterSensitiveLog: (
  obj: AuditCheckDetails
) => any;
export declare const IssuerCertificateIdentifierFilterSensitiveLog: (
  obj: IssuerCertificateIdentifier
) => any;
export declare const PolicyVersionIdentifierFilterSensitiveLog: (
  obj: PolicyVersionIdentifier
) => any;
export declare const ResourceIdentifierFilterSensitiveLog: (
  obj: ResourceIdentifier
) => any;
export declare const NonCompliantResourceFilterSensitiveLog: (
  obj: NonCompliantResource
) => any;
export declare const RelatedResourceFilterSensitiveLog: (
  obj: RelatedResource
) => any;
export declare const AuditFindingFilterSensitiveLog: (obj: AuditFinding) => any;
export declare const AuditMitigationActionExecutionMetadataFilterSensitiveLog: (
  obj: AuditMitigationActionExecutionMetadata
) => any;
export declare const AuditMitigationActionsTaskMetadataFilterSensitiveLog: (
  obj: AuditMitigationActionsTaskMetadata
) => any;
export declare const TaskStatisticsForAuditCheckFilterSensitiveLog: (
  obj: TaskStatisticsForAuditCheck
) => any;
export declare const AuditMitigationActionsTaskTargetFilterSensitiveLog: (
  obj: AuditMitigationActionsTaskTarget
) => any;
export declare const AuditNotificationTargetFilterSensitiveLog: (
  obj: AuditNotificationTarget
) => any;
export declare const AuditSuppressionFilterSensitiveLog: (
  obj: AuditSuppression
) => any;
export declare const AuditTaskMetadataFilterSensitiveLog: (
  obj: AuditTaskMetadata
) => any;
export declare const AuthInfoFilterSensitiveLog: (obj: AuthInfo) => any;
export declare const AuthorizerConfigFilterSensitiveLog: (
  obj: AuthorizerConfig
) => any;
export declare const AuthorizerDescriptionFilterSensitiveLog: (
  obj: AuthorizerDescription
) => any;
export declare const AuthorizerSummaryFilterSensitiveLog: (
  obj: AuthorizerSummary
) => any;
export declare const ExplicitDenyFilterSensitiveLog: (obj: ExplicitDeny) => any;
export declare const ImplicitDenyFilterSensitiveLog: (obj: ImplicitDeny) => any;
export declare const DeniedFilterSensitiveLog: (obj: Denied) => any;
export declare const AuthResultFilterSensitiveLog: (obj: AuthResult) => any;
export declare const CancelAuditMitigationActionsTaskRequestFilterSensitiveLog: (
  obj: CancelAuditMitigationActionsTaskRequest
) => any;
export declare const CancelAuditMitigationActionsTaskResponseFilterSensitiveLog: (
  obj: CancelAuditMitigationActionsTaskResponse
) => any;
export declare const CancelAuditTaskRequestFilterSensitiveLog: (
  obj: CancelAuditTaskRequest
) => any;
export declare const CancelAuditTaskResponseFilterSensitiveLog: (
  obj: CancelAuditTaskResponse
) => any;
export declare const CancelCertificateTransferRequestFilterSensitiveLog: (
  obj: CancelCertificateTransferRequest
) => any;
export declare const CancelDetectMitigationActionsTaskRequestFilterSensitiveLog: (
  obj: CancelDetectMitigationActionsTaskRequest
) => any;
export declare const CancelDetectMitigationActionsTaskResponseFilterSensitiveLog: (
  obj: CancelDetectMitigationActionsTaskResponse
) => any;
export declare const CancelJobRequestFilterSensitiveLog: (
  obj: CancelJobRequest
) => any;
export declare const CancelJobResponseFilterSensitiveLog: (
  obj: CancelJobResponse
) => any;
export declare const CancelJobExecutionRequestFilterSensitiveLog: (
  obj: CancelJobExecutionRequest
) => any;
export declare const ClearDefaultAuthorizerRequestFilterSensitiveLog: (
  obj: ClearDefaultAuthorizerRequest
) => any;
export declare const ClearDefaultAuthorizerResponseFilterSensitiveLog: (
  obj: ClearDefaultAuthorizerResponse
) => any;
export declare const ConfirmTopicRuleDestinationRequestFilterSensitiveLog: (
  obj: ConfirmTopicRuleDestinationRequest
) => any;
export declare const ConfirmTopicRuleDestinationResponseFilterSensitiveLog: (
  obj: ConfirmTopicRuleDestinationResponse
) => any;
export declare const CreateAuditSuppressionRequestFilterSensitiveLog: (
  obj: CreateAuditSuppressionRequest
) => any;
export declare const CreateAuditSuppressionResponseFilterSensitiveLog: (
  obj: CreateAuditSuppressionResponse
) => any;
export declare const TagFilterSensitiveLog: (obj: Tag) => any;
export declare const CreateAuthorizerRequestFilterSensitiveLog: (
  obj: CreateAuthorizerRequest
) => any;
export declare const CreateAuthorizerResponseFilterSensitiveLog: (
  obj: CreateAuthorizerResponse
) => any;
export declare const BillingGroupPropertiesFilterSensitiveLog: (
  obj: BillingGroupProperties
) => any;
export declare const CreateBillingGroupRequestFilterSensitiveLog: (
  obj: CreateBillingGroupRequest
) => any;
export declare const CreateBillingGroupResponseFilterSensitiveLog: (
  obj: CreateBillingGroupResponse
) => any;
export declare const CreateCertificateFromCsrRequestFilterSensitiveLog: (
  obj: CreateCertificateFromCsrRequest
) => any;
export declare const CreateCertificateFromCsrResponseFilterSensitiveLog: (
  obj: CreateCertificateFromCsrResponse
) => any;
export declare const CreateCustomMetricRequestFilterSensitiveLog: (
  obj: CreateCustomMetricRequest
) => any;
export declare const CreateCustomMetricResponseFilterSensitiveLog: (
  obj: CreateCustomMetricResponse
) => any;
export declare const CreateDimensionRequestFilterSensitiveLog: (
  obj: CreateDimensionRequest
) => any;
export declare const CreateDimensionResponseFilterSensitiveLog: (
  obj: CreateDimensionResponse
) => any;
export declare const CreateDomainConfigurationRequestFilterSensitiveLog: (
  obj: CreateDomainConfigurationRequest
) => any;
export declare const CreateDomainConfigurationResponseFilterSensitiveLog: (
  obj: CreateDomainConfigurationResponse
) => any;
export declare const ThingGroupPropertiesFilterSensitiveLog: (
  obj: ThingGroupProperties
) => any;
export declare const CreateDynamicThingGroupRequestFilterSensitiveLog: (
  obj: CreateDynamicThingGroupRequest
) => any;
export declare const CreateDynamicThingGroupResponseFilterSensitiveLog: (
  obj: CreateDynamicThingGroupResponse
) => any;
export declare const CreateFleetMetricRequestFilterSensitiveLog: (
  obj: CreateFleetMetricRequest
) => any;
export declare const CreateFleetMetricResponseFilterSensitiveLog: (
  obj: CreateFleetMetricResponse
) => any;
export declare const RetryCriteriaFilterSensitiveLog: (
  obj: RetryCriteria
) => any;
export declare const JobExecutionsRetryConfigFilterSensitiveLog: (
  obj: JobExecutionsRetryConfig
) => any;
export declare const RateIncreaseCriteriaFilterSensitiveLog: (
  obj: RateIncreaseCriteria
) => any;
export declare const ExponentialRolloutRateFilterSensitiveLog: (
  obj: ExponentialRolloutRate
) => any;
export declare const JobExecutionsRolloutConfigFilterSensitiveLog: (
  obj: JobExecutionsRolloutConfig
) => any;
export declare const PresignedUrlConfigFilterSensitiveLog: (
  obj: PresignedUrlConfig
) => any;
export declare const MaintenanceWindowFilterSensitiveLog: (
  obj: MaintenanceWindow
) => any;
export declare const SchedulingConfigFilterSensitiveLog: (
  obj: SchedulingConfig
) => any;
export declare const TimeoutConfigFilterSensitiveLog: (
  obj: TimeoutConfig
) => any;
export declare const CreateJobRequestFilterSensitiveLog: (
  obj: CreateJobRequest
) => any;
export declare const CreateJobResponseFilterSensitiveLog: (
  obj: CreateJobResponse
) => any;
export declare const CreateJobTemplateRequestFilterSensitiveLog: (
  obj: CreateJobTemplateRequest
) => any;
export declare const CreateJobTemplateResponseFilterSensitiveLog: (
  obj: CreateJobTemplateResponse
) => any;
export declare const CreateKeysAndCertificateRequestFilterSensitiveLog: (
  obj: CreateKeysAndCertificateRequest
) => any;
export declare const KeyPairFilterSensitiveLog: (obj: KeyPair) => any;
export declare const CreateKeysAndCertificateResponseFilterSensitiveLog: (
  obj: CreateKeysAndCertificateResponse
) => any;
export declare const EnableIoTLoggingParamsFilterSensitiveLog: (
  obj: EnableIoTLoggingParams
) => any;
export declare const PublishFindingToSnsParamsFilterSensitiveLog: (
  obj: PublishFindingToSnsParams
) => any;
export declare const ReplaceDefaultPolicyVersionParamsFilterSensitiveLog: (
  obj: ReplaceDefaultPolicyVersionParams
) => any;
export declare const UpdateCACertificateParamsFilterSensitiveLog: (
  obj: UpdateCACertificateParams
) => any;
export declare const UpdateDeviceCertificateParamsFilterSensitiveLog: (
  obj: UpdateDeviceCertificateParams
) => any;
export declare const MitigationActionParamsFilterSensitiveLog: (
  obj: MitigationActionParams
) => any;
export declare const CreateMitigationActionRequestFilterSensitiveLog: (
  obj: CreateMitigationActionRequest
) => any;
export declare const CreateMitigationActionResponseFilterSensitiveLog: (
  obj: CreateMitigationActionResponse
) => any;
export declare const AwsJobAbortCriteriaFilterSensitiveLog: (
  obj: AwsJobAbortCriteria
) => any;
export declare const AwsJobAbortConfigFilterSensitiveLog: (
  obj: AwsJobAbortConfig
) => any;
export declare const AwsJobRateIncreaseCriteriaFilterSensitiveLog: (
  obj: AwsJobRateIncreaseCriteria
) => any;
export declare const AwsJobExponentialRolloutRateFilterSensitiveLog: (
  obj: AwsJobExponentialRolloutRate
) => any;
export declare const AwsJobExecutionsRolloutConfigFilterSensitiveLog: (
  obj: AwsJobExecutionsRolloutConfig
) => any;
export declare const AwsJobPresignedUrlConfigFilterSensitiveLog: (
  obj: AwsJobPresignedUrlConfig
) => any;
export declare const AwsJobTimeoutConfigFilterSensitiveLog: (
  obj: AwsJobTimeoutConfig
) => any;
export declare const CodeSigningCertificateChainFilterSensitiveLog: (
  obj: CodeSigningCertificateChain
) => any;
export declare const CodeSigningSignatureFilterSensitiveLog: (
  obj: CodeSigningSignature
) => any;
export declare const CustomCodeSigningFilterSensitiveLog: (
  obj: CustomCodeSigning
) => any;
export declare const S3DestinationFilterSensitiveLog: (
  obj: S3Destination
) => any;
export declare const DestinationFilterSensitiveLog: (obj: Destination) => any;
export declare const SigningProfileParameterFilterSensitiveLog: (
  obj: SigningProfileParameter
) => any;
export declare const StartSigningJobParameterFilterSensitiveLog: (
  obj: StartSigningJobParameter
) => any;
export declare const CodeSigningFilterSensitiveLog: (obj: CodeSigning) => any;
export declare const S3LocationFilterSensitiveLog: (obj: S3Location) => any;
export declare const _StreamFilterSensitiveLog: (obj: _Stream) => any;
export declare const FileLocationFilterSensitiveLog: (obj: FileLocation) => any;
export declare const OTAUpdateFileFilterSensitiveLog: (
  obj: OTAUpdateFile
) => any;
export declare const CreateOTAUpdateRequestFilterSensitiveLog: (
  obj: CreateOTAUpdateRequest
) => any;
export declare const CreateOTAUpdateResponseFilterSensitiveLog: (
  obj: CreateOTAUpdateResponse
) => any;
export declare const CreatePolicyRequestFilterSensitiveLog: (
  obj: CreatePolicyRequest
) => any;
export declare const CreatePolicyResponseFilterSensitiveLog: (
  obj: CreatePolicyResponse
) => any;
export declare const CreatePolicyVersionRequestFilterSensitiveLog: (
  obj: CreatePolicyVersionRequest
) => any;
export declare const CreatePolicyVersionResponseFilterSensitiveLog: (
  obj: CreatePolicyVersionResponse
) => any;
export declare const CreateProvisioningClaimRequestFilterSensitiveLog: (
  obj: CreateProvisioningClaimRequest
) => any;
export declare const CreateProvisioningClaimResponseFilterSensitiveLog: (
  obj: CreateProvisioningClaimResponse
) => any;
export declare const ProvisioningHookFilterSensitiveLog: (
  obj: ProvisioningHook
) => any;
export declare const CreateProvisioningTemplateRequestFilterSensitiveLog: (
  obj: CreateProvisioningTemplateRequest
) => any;
export declare const CreateProvisioningTemplateResponseFilterSensitiveLog: (
  obj: CreateProvisioningTemplateResponse
) => any;
export declare const CreateProvisioningTemplateVersionRequestFilterSensitiveLog: (
  obj: CreateProvisioningTemplateVersionRequest
) => any;
export declare const CreateProvisioningTemplateVersionResponseFilterSensitiveLog: (
  obj: CreateProvisioningTemplateVersionResponse
) => any;
export declare const CreateRoleAliasRequestFilterSensitiveLog: (
  obj: CreateRoleAliasRequest
) => any;
export declare const CreateRoleAliasResponseFilterSensitiveLog: (
  obj: CreateRoleAliasResponse
) => any;
export declare const CreateScheduledAuditRequestFilterSensitiveLog: (
  obj: CreateScheduledAuditRequest
) => any;
export declare const CreateScheduledAuditResponseFilterSensitiveLog: (
  obj: CreateScheduledAuditResponse
) => any;
export declare const CreateSecurityProfileRequestFilterSensitiveLog: (
  obj: CreateSecurityProfileRequest
) => any;
export declare const CreateSecurityProfileResponseFilterSensitiveLog: (
  obj: CreateSecurityProfileResponse
) => any;
export declare const StreamFileFilterSensitiveLog: (obj: StreamFile) => any;
export declare const CreateStreamRequestFilterSensitiveLog: (
  obj: CreateStreamRequest
) => any;
export declare const CreateStreamResponseFilterSensitiveLog: (
  obj: CreateStreamResponse
) => any;
export declare const CreateThingRequestFilterSensitiveLog: (
  obj: CreateThingRequest
) => any;
export declare const CreateThingResponseFilterSensitiveLog: (
  obj: CreateThingResponse
) => any;
export declare const CreateThingGroupRequestFilterSensitiveLog: (
  obj: CreateThingGroupRequest
) => any;
export declare const CreateThingGroupResponseFilterSensitiveLog: (
  obj: CreateThingGroupResponse
) => any;
export declare const ThingTypePropertiesFilterSensitiveLog: (
  obj: ThingTypeProperties
) => any;
export declare const CreateThingTypeRequestFilterSensitiveLog: (
  obj: CreateThingTypeRequest
) => any;
export declare const CreateThingTypeResponseFilterSensitiveLog: (
  obj: CreateThingTypeResponse
) => any;
export declare const TopicRulePayloadFilterSensitiveLog: (
  obj: TopicRulePayload
) => any;
export declare const CreateTopicRuleRequestFilterSensitiveLog: (
  obj: CreateTopicRuleRequest
) => any;
export declare const HttpUrlDestinationConfigurationFilterSensitiveLog: (
  obj: HttpUrlDestinationConfiguration
) => any;
export declare const VpcDestinationConfigurationFilterSensitiveLog: (
  obj: VpcDestinationConfiguration
) => any;
export declare const TopicRuleDestinationConfigurationFilterSensitiveLog: (
  obj: TopicRuleDestinationConfiguration
) => any;
export declare const CreateTopicRuleDestinationRequestFilterSensitiveLog: (
  obj: CreateTopicRuleDestinationRequest
) => any;
export declare const HttpUrlDestinationPropertiesFilterSensitiveLog: (
  obj: HttpUrlDestinationProperties
) => any;
export declare const VpcDestinationPropertiesFilterSensitiveLog: (
  obj: VpcDestinationProperties
) => any;
export declare const TopicRuleDestinationFilterSensitiveLog: (
  obj: TopicRuleDestination
) => any;
export declare const CreateTopicRuleDestinationResponseFilterSensitiveLog: (
  obj: CreateTopicRuleDestinationResponse
) => any;
export declare const DeleteAccountAuditConfigurationRequestFilterSensitiveLog: (
  obj: DeleteAccountAuditConfigurationRequest
) => any;
export declare const DeleteAccountAuditConfigurationResponseFilterSensitiveLog: (
  obj: DeleteAccountAuditConfigurationResponse
) => any;
export declare const DeleteAuditSuppressionRequestFilterSensitiveLog: (
  obj: DeleteAuditSuppressionRequest
) => any;
export declare const DeleteAuditSuppressionResponseFilterSensitiveLog: (
  obj: DeleteAuditSuppressionResponse
) => any;
export declare const DeleteAuthorizerRequestFilterSensitiveLog: (
  obj: DeleteAuthorizerRequest
) => any;
export declare const DeleteAuthorizerResponseFilterSensitiveLog: (
  obj: DeleteAuthorizerResponse
) => any;
export declare const DeleteBillingGroupRequestFilterSensitiveLog: (
  obj: DeleteBillingGroupRequest
) => any;
export declare const DeleteBillingGroupResponseFilterSensitiveLog: (
  obj: DeleteBillingGroupResponse
) => any;
export declare const DeleteCACertificateRequestFilterSensitiveLog: (
  obj: DeleteCACertificateRequest
) => any;
export declare const DeleteCACertificateResponseFilterSensitiveLog: (
  obj: DeleteCACertificateResponse
) => any;
export declare const DeleteCertificateRequestFilterSensitiveLog: (
  obj: DeleteCertificateRequest
) => any;
export declare const DeleteCustomMetricRequestFilterSensitiveLog: (
  obj: DeleteCustomMetricRequest
) => any;
export declare const DeleteCustomMetricResponseFilterSensitiveLog: (
  obj: DeleteCustomMetricResponse
) => any;
export declare const DeleteDimensionRequestFilterSensitiveLog: (
  obj: DeleteDimensionRequest
) => any;
export declare const DeleteDimensionResponseFilterSensitiveLog: (
  obj: DeleteDimensionResponse
) => any;
export declare const DeleteDomainConfigurationRequestFilterSensitiveLog: (
  obj: DeleteDomainConfigurationRequest
) => any;
export declare const DeleteDomainConfigurationResponseFilterSensitiveLog: (
  obj: DeleteDomainConfigurationResponse
) => any;
export declare const DeleteDynamicThingGroupRequestFilterSensitiveLog: (
  obj: DeleteDynamicThingGroupRequest
) => any;
export declare const DeleteDynamicThingGroupResponseFilterSensitiveLog: (
  obj: DeleteDynamicThingGroupResponse
) => any;
export declare const DeleteFleetMetricRequestFilterSensitiveLog: (
  obj: DeleteFleetMetricRequest
) => any;
export declare const DeleteJobRequestFilterSensitiveLog: (
  obj: DeleteJobRequest
) => any;
export declare const DeleteJobExecutionRequestFilterSensitiveLog: (
  obj: DeleteJobExecutionRequest
) => any;
export declare const DeleteJobTemplateRequestFilterSensitiveLog: (
  obj: DeleteJobTemplateRequest
) => any;
export declare const DeleteMitigationActionRequestFilterSensitiveLog: (
  obj: DeleteMitigationActionRequest
) => any;
export declare const DeleteMitigationActionResponseFilterSensitiveLog: (
  obj: DeleteMitigationActionResponse
) => any;
export declare const DeleteOTAUpdateRequestFilterSensitiveLog: (
  obj: DeleteOTAUpdateRequest
) => any;
export declare const DeleteOTAUpdateResponseFilterSensitiveLog: (
  obj: DeleteOTAUpdateResponse
) => any;
export declare const DeletePolicyRequestFilterSensitiveLog: (
  obj: DeletePolicyRequest
) => any;
