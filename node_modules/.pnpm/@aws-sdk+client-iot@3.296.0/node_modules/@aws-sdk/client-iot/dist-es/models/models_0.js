import { SENSITIVE_STRING } from "@aws-sdk/smithy-client";
import { IoTServiceException as __BaseException } from "./IoTServiceException";
export var AbortAction;
(function (AbortAction) {
    AbortAction["CANCEL"] = "CANCEL";
})(AbortAction || (AbortAction = {}));
export var JobExecutionFailureType;
(function (JobExecutionFailureType) {
    JobExecutionFailureType["ALL"] = "ALL";
    JobExecutionFailureType["FAILED"] = "FAILED";
    JobExecutionFailureType["REJECTED"] = "REJECTED";
    JobExecutionFailureType["TIMED_OUT"] = "TIMED_OUT";
})(JobExecutionFailureType || (JobExecutionFailureType = {}));
export class InternalFailureException extends __BaseException {
    constructor(opts) {
        super({
            name: "InternalFailureException",
            $fault: "server",
            ...opts,
        });
        this.name = "InternalFailureException";
        this.$fault = "server";
        Object.setPrototypeOf(this, InternalFailureException.prototype);
    }
}
export class InvalidRequestException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidRequestException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidRequestException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidRequestException.prototype);
    }
}
export class ResourceNotFoundException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
    }
}
export class ServiceUnavailableException extends __BaseException {
    constructor(opts) {
        super({
            name: "ServiceUnavailableException",
            $fault: "server",
            ...opts,
        });
        this.name = "ServiceUnavailableException";
        this.$fault = "server";
        Object.setPrototypeOf(this, ServiceUnavailableException.prototype);
    }
}
export class ThrottlingException extends __BaseException {
    constructor(opts) {
        super({
            name: "ThrottlingException",
            $fault: "client",
            ...opts,
        });
        this.name = "ThrottlingException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ThrottlingException.prototype);
    }
}
export class TransferAlreadyCompletedException extends __BaseException {
    constructor(opts) {
        super({
            name: "TransferAlreadyCompletedException",
            $fault: "client",
            ...opts,
        });
        this.name = "TransferAlreadyCompletedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, TransferAlreadyCompletedException.prototype);
    }
}
export class UnauthorizedException extends __BaseException {
    constructor(opts) {
        super({
            name: "UnauthorizedException",
            $fault: "client",
            ...opts,
        });
        this.name = "UnauthorizedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, UnauthorizedException.prototype);
    }
}
export var DynamoKeyType;
(function (DynamoKeyType) {
    DynamoKeyType["NUMBER"] = "NUMBER";
    DynamoKeyType["STRING"] = "STRING";
})(DynamoKeyType || (DynamoKeyType = {}));
export var AssetPropertyVariant;
(function (AssetPropertyVariant) {
    AssetPropertyVariant.visit = (value, visitor) => {
        if (value.stringValue !== undefined)
            return visitor.stringValue(value.stringValue);
        if (value.integerValue !== undefined)
            return visitor.integerValue(value.integerValue);
        if (value.doubleValue !== undefined)
            return visitor.doubleValue(value.doubleValue);
        if (value.booleanValue !== undefined)
            return visitor.booleanValue(value.booleanValue);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(AssetPropertyVariant || (AssetPropertyVariant = {}));
export var CannedAccessControlList;
(function (CannedAccessControlList) {
    CannedAccessControlList["AuthenticatedRead"] = "authenticated-read";
    CannedAccessControlList["AwsExecRead"] = "aws-exec-read";
    CannedAccessControlList["BucketOwnerFullControl"] = "bucket-owner-full-control";
    CannedAccessControlList["BucketOwnerRead"] = "bucket-owner-read";
    CannedAccessControlList["LogDeliveryWrite"] = "log-delivery-write";
    CannedAccessControlList["Private"] = "private";
    CannedAccessControlList["PublicRead"] = "public-read";
    CannedAccessControlList["PublicReadWrite"] = "public-read-write";
})(CannedAccessControlList || (CannedAccessControlList = {}));
export var MessageFormat;
(function (MessageFormat) {
    MessageFormat["JSON"] = "JSON";
    MessageFormat["RAW"] = "RAW";
})(MessageFormat || (MessageFormat = {}));
export var ActionType;
(function (ActionType) {
    ActionType["CONNECT"] = "CONNECT";
    ActionType["PUBLISH"] = "PUBLISH";
    ActionType["RECEIVE"] = "RECEIVE";
    ActionType["SUBSCRIBE"] = "SUBSCRIBE";
})(ActionType || (ActionType = {}));
export var ComparisonOperator;
(function (ComparisonOperator) {
    ComparisonOperator["GREATER_THAN"] = "greater-than";
    ComparisonOperator["GREATER_THAN_EQUALS"] = "greater-than-equals";
    ComparisonOperator["IN_CIDR_SET"] = "in-cidr-set";
    ComparisonOperator["IN_PORT_SET"] = "in-port-set";
    ComparisonOperator["IN_SET"] = "in-set";
    ComparisonOperator["LESS_THAN"] = "less-than";
    ComparisonOperator["LESS_THAN_EQUALS"] = "less-than-equals";
    ComparisonOperator["NOT_IN_CIDR_SET"] = "not-in-cidr-set";
    ComparisonOperator["NOT_IN_PORT_SET"] = "not-in-port-set";
    ComparisonOperator["NOT_IN_SET"] = "not-in-set";
})(ComparisonOperator || (ComparisonOperator = {}));
export var ConfidenceLevel;
(function (ConfidenceLevel) {
    ConfidenceLevel["HIGH"] = "HIGH";
    ConfidenceLevel["LOW"] = "LOW";
    ConfidenceLevel["MEDIUM"] = "MEDIUM";
})(ConfidenceLevel || (ConfidenceLevel = {}));
export var DimensionValueOperator;
(function (DimensionValueOperator) {
    DimensionValueOperator["IN"] = "IN";
    DimensionValueOperator["NOT_IN"] = "NOT_IN";
})(DimensionValueOperator || (DimensionValueOperator = {}));
export var VerificationState;
(function (VerificationState) {
    VerificationState["BENIGN_POSITIVE"] = "BENIGN_POSITIVE";
    VerificationState["FALSE_POSITIVE"] = "FALSE_POSITIVE";
    VerificationState["TRUE_POSITIVE"] = "TRUE_POSITIVE";
    VerificationState["UNKNOWN"] = "UNKNOWN";
})(VerificationState || (VerificationState = {}));
export var AggregationTypeName;
(function (AggregationTypeName) {
    AggregationTypeName["CARDINALITY"] = "Cardinality";
    AggregationTypeName["PERCENTILES"] = "Percentiles";
    AggregationTypeName["STATISTICS"] = "Statistics";
})(AggregationTypeName || (AggregationTypeName = {}));
export var AlertTargetType;
(function (AlertTargetType) {
    AlertTargetType["SNS"] = "SNS";
})(AlertTargetType || (AlertTargetType = {}));
export class LimitExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "LimitExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "LimitExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, LimitExceededException.prototype);
    }
}
export class VersionConflictException extends __BaseException {
    constructor(opts) {
        super({
            name: "VersionConflictException",
            $fault: "client",
            ...opts,
        });
        this.name = "VersionConflictException";
        this.$fault = "client";
        Object.setPrototypeOf(this, VersionConflictException.prototype);
    }
}
export var AuditCheckRunStatus;
(function (AuditCheckRunStatus) {
    AuditCheckRunStatus["CANCELED"] = "CANCELED";
    AuditCheckRunStatus["COMPLETED_COMPLIANT"] = "COMPLETED_COMPLIANT";
    AuditCheckRunStatus["COMPLETED_NON_COMPLIANT"] = "COMPLETED_NON_COMPLIANT";
    AuditCheckRunStatus["FAILED"] = "FAILED";
    AuditCheckRunStatus["IN_PROGRESS"] = "IN_PROGRESS";
    AuditCheckRunStatus["WAITING_FOR_DATA_COLLECTION"] = "WAITING_FOR_DATA_COLLECTION";
})(AuditCheckRunStatus || (AuditCheckRunStatus = {}));
export var ResourceType;
(function (ResourceType) {
    ResourceType["ACCOUNT_SETTINGS"] = "ACCOUNT_SETTINGS";
    ResourceType["CA_CERTIFICATE"] = "CA_CERTIFICATE";
    ResourceType["CLIENT_ID"] = "CLIENT_ID";
    ResourceType["COGNITO_IDENTITY_POOL"] = "COGNITO_IDENTITY_POOL";
    ResourceType["DEVICE_CERTIFICATE"] = "DEVICE_CERTIFICATE";
    ResourceType["IAM_ROLE"] = "IAM_ROLE";
    ResourceType["IOT_POLICY"] = "IOT_POLICY";
    ResourceType["ISSUER_CERTIFICATE"] = "ISSUER_CERTIFICATE";
    ResourceType["ROLE_ALIAS"] = "ROLE_ALIAS";
})(ResourceType || (ResourceType = {}));
export var AuditFindingSeverity;
(function (AuditFindingSeverity) {
    AuditFindingSeverity["CRITICAL"] = "CRITICAL";
    AuditFindingSeverity["HIGH"] = "HIGH";
    AuditFindingSeverity["LOW"] = "LOW";
    AuditFindingSeverity["MEDIUM"] = "MEDIUM";
})(AuditFindingSeverity || (AuditFindingSeverity = {}));
export var AuditFrequency;
(function (AuditFrequency) {
    AuditFrequency["BIWEEKLY"] = "BIWEEKLY";
    AuditFrequency["DAILY"] = "DAILY";
    AuditFrequency["MONTHLY"] = "MONTHLY";
    AuditFrequency["WEEKLY"] = "WEEKLY";
})(AuditFrequency || (AuditFrequency = {}));
export var AuditMitigationActionsExecutionStatus;
(function (AuditMitigationActionsExecutionStatus) {
    AuditMitigationActionsExecutionStatus["CANCELED"] = "CANCELED";
    AuditMitigationActionsExecutionStatus["COMPLETED"] = "COMPLETED";
    AuditMitigationActionsExecutionStatus["FAILED"] = "FAILED";
    AuditMitigationActionsExecutionStatus["IN_PROGRESS"] = "IN_PROGRESS";
    AuditMitigationActionsExecutionStatus["PENDING"] = "PENDING";
    AuditMitigationActionsExecutionStatus["SKIPPED"] = "SKIPPED";
})(AuditMitigationActionsExecutionStatus || (AuditMitigationActionsExecutionStatus = {}));
export var AuditMitigationActionsTaskStatus;
(function (AuditMitigationActionsTaskStatus) {
    AuditMitigationActionsTaskStatus["CANCELED"] = "CANCELED";
    AuditMitigationActionsTaskStatus["COMPLETED"] = "COMPLETED";
    AuditMitigationActionsTaskStatus["FAILED"] = "FAILED";
    AuditMitigationActionsTaskStatus["IN_PROGRESS"] = "IN_PROGRESS";
})(AuditMitigationActionsTaskStatus || (AuditMitigationActionsTaskStatus = {}));
export var AuditNotificationType;
(function (AuditNotificationType) {
    AuditNotificationType["SNS"] = "SNS";
})(AuditNotificationType || (AuditNotificationType = {}));
export var AuditTaskStatus;
(function (AuditTaskStatus) {
    AuditTaskStatus["CANCELED"] = "CANCELED";
    AuditTaskStatus["COMPLETED"] = "COMPLETED";
    AuditTaskStatus["FAILED"] = "FAILED";
    AuditTaskStatus["IN_PROGRESS"] = "IN_PROGRESS";
})(AuditTaskStatus || (AuditTaskStatus = {}));
export var AuditTaskType;
(function (AuditTaskType) {
    AuditTaskType["ON_DEMAND_AUDIT_TASK"] = "ON_DEMAND_AUDIT_TASK";
    AuditTaskType["SCHEDULED_AUDIT_TASK"] = "SCHEDULED_AUDIT_TASK";
})(AuditTaskType || (AuditTaskType = {}));
export var AuthDecision;
(function (AuthDecision) {
    AuthDecision["ALLOWED"] = "ALLOWED";
    AuthDecision["EXPLICIT_DENY"] = "EXPLICIT_DENY";
    AuthDecision["IMPLICIT_DENY"] = "IMPLICIT_DENY";
})(AuthDecision || (AuthDecision = {}));
export var AuthorizerStatus;
(function (AuthorizerStatus) {
    AuthorizerStatus["ACTIVE"] = "ACTIVE";
    AuthorizerStatus["INACTIVE"] = "INACTIVE";
})(AuthorizerStatus || (AuthorizerStatus = {}));
export var AutoRegistrationStatus;
(function (AutoRegistrationStatus) {
    AutoRegistrationStatus["DISABLE"] = "DISABLE";
    AutoRegistrationStatus["ENABLE"] = "ENABLE";
})(AutoRegistrationStatus || (AutoRegistrationStatus = {}));
export class InvalidStateTransitionException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidStateTransitionException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidStateTransitionException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidStateTransitionException.prototype);
    }
}
export class ConflictingResourceUpdateException extends __BaseException {
    constructor(opts) {
        super({
            name: "ConflictingResourceUpdateException",
            $fault: "client",
            ...opts,
        });
        this.name = "ConflictingResourceUpdateException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ConflictingResourceUpdateException.prototype);
    }
}
export class InternalException extends __BaseException {
    constructor(opts) {
        super({
            name: "InternalException",
            $fault: "server",
            ...opts,
        });
        this.name = "InternalException";
        this.$fault = "server";
        Object.setPrototypeOf(this, InternalException.prototype);
    }
}
export class ResourceAlreadyExistsException extends __BaseException {
    constructor(opts) {
        super({
            name: "ResourceAlreadyExistsException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceAlreadyExistsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceAlreadyExistsException.prototype);
        this.resourceId = opts.resourceId;
        this.resourceArn = opts.resourceArn;
    }
}
export var CustomMetricType;
(function (CustomMetricType) {
    CustomMetricType["IP_ADDRESS_LIST"] = "ip-address-list";
    CustomMetricType["NUMBER"] = "number";
    CustomMetricType["NUMBER_LIST"] = "number-list";
    CustomMetricType["STRING_LIST"] = "string-list";
})(CustomMetricType || (CustomMetricType = {}));
export var DimensionType;
(function (DimensionType) {
    DimensionType["TOPIC_FILTER"] = "TOPIC_FILTER";
})(DimensionType || (DimensionType = {}));
export class CertificateValidationException extends __BaseException {
    constructor(opts) {
        super({
            name: "CertificateValidationException",
            $fault: "client",
            ...opts,
        });
        this.name = "CertificateValidationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, CertificateValidationException.prototype);
    }
}
export var ServiceType;
(function (ServiceType) {
    ServiceType["CREDENTIAL_PROVIDER"] = "CREDENTIAL_PROVIDER";
    ServiceType["DATA"] = "DATA";
    ServiceType["JOBS"] = "JOBS";
})(ServiceType || (ServiceType = {}));
export class InvalidQueryException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidQueryException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidQueryException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidQueryException.prototype);
    }
}
export var FleetMetricUnit;
(function (FleetMetricUnit) {
    FleetMetricUnit["Bits"] = "Bits";
    FleetMetricUnit["BitsSecond"] = "Bits/Second";
    FleetMetricUnit["Bytes"] = "Bytes";
    FleetMetricUnit["BytesSecond"] = "Bytes/Second";
    FleetMetricUnit["Count"] = "Count";
    FleetMetricUnit["CountSecond"] = "Count/Second";
    FleetMetricUnit["Gigabits"] = "Gigabits";
    FleetMetricUnit["GigabitsSecond"] = "Gigabits/Second";
    FleetMetricUnit["Gigabytes"] = "Gigabytes";
    FleetMetricUnit["GigabytesSecond"] = "Gigabytes/Second";
    FleetMetricUnit["Kilobits"] = "Kilobits";
    FleetMetricUnit["KilobitsSecond"] = "Kilobits/Second";
    FleetMetricUnit["Kilobytes"] = "Kilobytes";
    FleetMetricUnit["KilobytesSecond"] = "Kilobytes/Second";
    FleetMetricUnit["Megabits"] = "Megabits";
    FleetMetricUnit["MegabitsSecond"] = "Megabits/Second";
    FleetMetricUnit["Megabytes"] = "Megabytes";
    FleetMetricUnit["MegabytesSecond"] = "Megabytes/Second";
    FleetMetricUnit["Microseconds"] = "Microseconds";
    FleetMetricUnit["Milliseconds"] = "Milliseconds";
    FleetMetricUnit["None"] = "None";
    FleetMetricUnit["Percent"] = "Percent";
    FleetMetricUnit["Seconds"] = "Seconds";
    FleetMetricUnit["Terabits"] = "Terabits";
    FleetMetricUnit["TerabitsSecond"] = "Terabits/Second";
    FleetMetricUnit["Terabytes"] = "Terabytes";
    FleetMetricUnit["TerabytesSecond"] = "Terabytes/Second";
})(FleetMetricUnit || (FleetMetricUnit = {}));
export class IndexNotReadyException extends __BaseException {
    constructor(opts) {
        super({
            name: "IndexNotReadyException",
            $fault: "client",
            ...opts,
        });
        this.name = "IndexNotReadyException";
        this.$fault = "client";
        Object.setPrototypeOf(this, IndexNotReadyException.prototype);
    }
}
export class InvalidAggregationException extends __BaseException {
    constructor(opts) {
        super({
            name: "InvalidAggregationException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidAggregationException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidAggregationException.prototype);
    }
}
export var RetryableFailureType;
(function (RetryableFailureType) {
    RetryableFailureType["ALL"] = "ALL";
    RetryableFailureType["FAILED"] = "FAILED";
    RetryableFailureType["TIMED_OUT"] = "TIMED_OUT";
})(RetryableFailureType || (RetryableFailureType = {}));
export var JobEndBehavior;
(function (JobEndBehavior) {
    JobEndBehavior["CANCEL"] = "CANCEL";
    JobEndBehavior["FORCE_CANCEL"] = "FORCE_CANCEL";
    JobEndBehavior["STOP_ROLLOUT"] = "STOP_ROLLOUT";
})(JobEndBehavior || (JobEndBehavior = {}));
export var TargetSelection;
(function (TargetSelection) {
    TargetSelection["CONTINUOUS"] = "CONTINUOUS";
    TargetSelection["SNAPSHOT"] = "SNAPSHOT";
})(TargetSelection || (TargetSelection = {}));
export class ConflictException extends __BaseException {
    constructor(opts) {
        super({
            name: "ConflictException",
            $fault: "client",
            ...opts,
        });
        this.name = "ConflictException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ConflictException.prototype);
    }
}
export var LogLevel;
(function (LogLevel) {
    LogLevel["DEBUG"] = "DEBUG";
    LogLevel["DISABLED"] = "DISABLED";
    LogLevel["ERROR"] = "ERROR";
    LogLevel["INFO"] = "INFO";
    LogLevel["WARN"] = "WARN";
})(LogLevel || (LogLevel = {}));
export var PolicyTemplateName;
(function (PolicyTemplateName) {
    PolicyTemplateName["BLANK_POLICY"] = "BLANK_POLICY";
})(PolicyTemplateName || (PolicyTemplateName = {}));
export var CACertificateUpdateAction;
(function (CACertificateUpdateAction) {
    CACertificateUpdateAction["DEACTIVATE"] = "DEACTIVATE";
})(CACertificateUpdateAction || (CACertificateUpdateAction = {}));
export var DeviceCertificateUpdateAction;
(function (DeviceCertificateUpdateAction) {
    DeviceCertificateUpdateAction["DEACTIVATE"] = "DEACTIVATE";
})(DeviceCertificateUpdateAction || (DeviceCertificateUpdateAction = {}));
export var AwsJobAbortCriteriaAbortAction;
(function (AwsJobAbortCriteriaAbortAction) {
    AwsJobAbortCriteriaAbortAction["CANCEL"] = "CANCEL";
})(AwsJobAbortCriteriaAbortAction || (AwsJobAbortCriteriaAbortAction = {}));
export var AwsJobAbortCriteriaFailureType;
(function (AwsJobAbortCriteriaFailureType) {
    AwsJobAbortCriteriaFailureType["ALL"] = "ALL";
    AwsJobAbortCriteriaFailureType["FAILED"] = "FAILED";
    AwsJobAbortCriteriaFailureType["REJECTED"] = "REJECTED";
    AwsJobAbortCriteriaFailureType["TIMED_OUT"] = "TIMED_OUT";
})(AwsJobAbortCriteriaFailureType || (AwsJobAbortCriteriaFailureType = {}));
export var Protocol;
(function (Protocol) {
    Protocol["HTTP"] = "HTTP";
    Protocol["MQTT"] = "MQTT";
})(Protocol || (Protocol = {}));
export var OTAUpdateStatus;
(function (OTAUpdateStatus) {
    OTAUpdateStatus["CREATE_COMPLETE"] = "CREATE_COMPLETE";
    OTAUpdateStatus["CREATE_FAILED"] = "CREATE_FAILED";
    OTAUpdateStatus["CREATE_IN_PROGRESS"] = "CREATE_IN_PROGRESS";
    OTAUpdateStatus["CREATE_PENDING"] = "CREATE_PENDING";
})(OTAUpdateStatus || (OTAUpdateStatus = {}));
export class MalformedPolicyException extends __BaseException {
    constructor(opts) {
        super({
            name: "MalformedPolicyException",
            $fault: "client",
            ...opts,
        });
        this.name = "MalformedPolicyException";
        this.$fault = "client";
        Object.setPrototypeOf(this, MalformedPolicyException.prototype);
    }
}
export class VersionsLimitExceededException extends __BaseException {
    constructor(opts) {
        super({
            name: "VersionsLimitExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "VersionsLimitExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, VersionsLimitExceededException.prototype);
    }
}
export var TemplateType;
(function (TemplateType) {
    TemplateType["FLEET_PROVISIONING"] = "FLEET_PROVISIONING";
    TemplateType["JITP"] = "JITP";
})(TemplateType || (TemplateType = {}));
export var DayOfWeek;
(function (DayOfWeek) {
    DayOfWeek["FRI"] = "FRI";
    DayOfWeek["MON"] = "MON";
    DayOfWeek["SAT"] = "SAT";
    DayOfWeek["SUN"] = "SUN";
    DayOfWeek["THU"] = "THU";
    DayOfWeek["TUE"] = "TUE";
    DayOfWeek["WED"] = "WED";
})(DayOfWeek || (DayOfWeek = {}));
export class SqlParseException extends __BaseException {
    constructor(opts) {
        super({
            name: "SqlParseException",
            $fault: "client",
            ...opts,
        });
        this.name = "SqlParseException";
        this.$fault = "client";
        Object.setPrototypeOf(this, SqlParseException.prototype);
    }
}
export var TopicRuleDestinationStatus;
(function (TopicRuleDestinationStatus) {
    TopicRuleDestinationStatus["DELETING"] = "DELETING";
    TopicRuleDestinationStatus["DISABLED"] = "DISABLED";
    TopicRuleDestinationStatus["ENABLED"] = "ENABLED";
    TopicRuleDestinationStatus["ERROR"] = "ERROR";
    TopicRuleDestinationStatus["IN_PROGRESS"] = "IN_PROGRESS";
})(TopicRuleDestinationStatus || (TopicRuleDestinationStatus = {}));
export class DeleteConflictException extends __BaseException {
    constructor(opts) {
        super({
            name: "DeleteConflictException",
            $fault: "client",
            ...opts,
        });
        this.name = "DeleteConflictException";
        this.$fault = "client";
        Object.setPrototypeOf(this, DeleteConflictException.prototype);
    }
}
export class CertificateStateException extends __BaseException {
    constructor(opts) {
        super({
            name: "CertificateStateException",
            $fault: "client",
            ...opts,
        });
        this.name = "CertificateStateException";
        this.$fault = "client";
        Object.setPrototypeOf(this, CertificateStateException.prototype);
    }
}
export const AbortCriteriaFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AbortConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AcceptCertificateTransferRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CloudwatchAlarmActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CloudwatchLogsActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CloudwatchMetricActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DynamoDBActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PutItemInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DynamoDBv2ActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ElasticsearchActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const FirehoseActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SigV4AuthorizationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const HttpAuthorizationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const HttpActionHeaderFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const HttpActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const IotAnalyticsActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const IotEventsActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AssetPropertyTimestampFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AssetPropertyVariantFilterSensitiveLog = (obj) => {
    if (obj.stringValue !== undefined)
        return { stringValue: obj.stringValue };
    if (obj.integerValue !== undefined)
        return { integerValue: obj.integerValue };
    if (obj.doubleValue !== undefined)
        return { doubleValue: obj.doubleValue };
    if (obj.booleanValue !== undefined)
        return { booleanValue: obj.booleanValue };
    if (obj.$unknown !== undefined)
        return { [obj.$unknown[0]]: "UNKNOWN" };
};
export const AssetPropertyValueFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.value && { value: AssetPropertyVariantFilterSensitiveLog(obj.value) }),
});
export const PutAssetPropertyValueEntryFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.propertyValues && {
        propertyValues: obj.propertyValues.map((item) => AssetPropertyValueFilterSensitiveLog(item)),
    }),
});
export const IotSiteWiseActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const KafkaActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const KinesisActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LambdaActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LocationTimestampFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const LocationActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const OpenSearchActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UserPropertyFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const MqttHeadersFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RepublishActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const S3ActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SalesforceActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SnsActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SqsActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StepFunctionsActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TimestreamDimensionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TimestreamTimestampFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TimestreamActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const MachineLearningDetectionConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StatisticalThresholdFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const MetricValueFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const BehaviorCriteriaFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const MetricDimensionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const BehaviorFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ViolationEventAdditionalInfoFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ActiveViolationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const MetricToRetainFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AddThingsToThingGroupParamsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AddThingToBillingGroupRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AddThingToBillingGroupResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AddThingToThingGroupRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AddThingToThingGroupResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AggregationTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AlertTargetFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PolicyFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AllowedFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AssociateTargetsWithJobRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AssociateTargetsWithJobResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AttachPolicyRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AttachPrincipalPolicyRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AttachSecurityProfileRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AttachSecurityProfileResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AttachThingPrincipalRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AttachThingPrincipalResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AttributePayloadFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AuditCheckConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AuditCheckDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const IssuerCertificateIdentifierFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PolicyVersionIdentifierFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ResourceIdentifierFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const NonCompliantResourceFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RelatedResourceFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AuditFindingFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AuditMitigationActionExecutionMetadataFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AuditMitigationActionsTaskMetadataFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TaskStatisticsForAuditCheckFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AuditMitigationActionsTaskTargetFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AuditNotificationTargetFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AuditSuppressionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AuditTaskMetadataFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AuthInfoFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AuthorizerConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AuthorizerDescriptionFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AuthorizerSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ExplicitDenyFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ImplicitDenyFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeniedFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AuthResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CancelAuditMitigationActionsTaskRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CancelAuditMitigationActionsTaskResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CancelAuditTaskRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CancelAuditTaskResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CancelCertificateTransferRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CancelDetectMitigationActionsTaskRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CancelDetectMitigationActionsTaskResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CancelJobRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CancelJobResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CancelJobExecutionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ClearDefaultAuthorizerRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ClearDefaultAuthorizerResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ConfirmTopicRuleDestinationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ConfirmTopicRuleDestinationResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateAuditSuppressionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateAuditSuppressionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TagFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateAuthorizerRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateAuthorizerResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const BillingGroupPropertiesFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateBillingGroupRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateBillingGroupResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateCertificateFromCsrRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateCertificateFromCsrResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateCustomMetricRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateCustomMetricResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateDimensionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateDimensionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateDomainConfigurationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateDomainConfigurationResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ThingGroupPropertiesFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateDynamicThingGroupRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateDynamicThingGroupResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateFleetMetricRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateFleetMetricResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RetryCriteriaFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const JobExecutionsRetryConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const RateIncreaseCriteriaFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ExponentialRolloutRateFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const JobExecutionsRolloutConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PresignedUrlConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const MaintenanceWindowFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SchedulingConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TimeoutConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateJobRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateJobResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateJobTemplateRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateJobTemplateResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateKeysAndCertificateRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const KeyPairFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.PrivateKey && { PrivateKey: SENSITIVE_STRING }),
});
export const CreateKeysAndCertificateResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.keyPair && { keyPair: KeyPairFilterSensitiveLog(obj.keyPair) }),
});
export const EnableIoTLoggingParamsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const PublishFindingToSnsParamsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ReplaceDefaultPolicyVersionParamsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateCACertificateParamsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const UpdateDeviceCertificateParamsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const MitigationActionParamsFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateMitigationActionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateMitigationActionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AwsJobAbortCriteriaFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AwsJobAbortConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AwsJobRateIncreaseCriteriaFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AwsJobExponentialRolloutRateFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AwsJobExecutionsRolloutConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AwsJobPresignedUrlConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const AwsJobTimeoutConfigFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CodeSigningCertificateChainFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CodeSigningSignatureFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CustomCodeSigningFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const S3DestinationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DestinationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const SigningProfileParameterFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StartSigningJobParameterFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CodeSigningFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const S3LocationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const _StreamFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const FileLocationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const OTAUpdateFileFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateOTAUpdateRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateOTAUpdateResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreatePolicyRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreatePolicyResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreatePolicyVersionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreatePolicyVersionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateProvisioningClaimRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateProvisioningClaimResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.keyPair && { keyPair: KeyPairFilterSensitiveLog(obj.keyPair) }),
});
export const ProvisioningHookFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateProvisioningTemplateRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateProvisioningTemplateResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateProvisioningTemplateVersionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateProvisioningTemplateVersionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateRoleAliasRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateRoleAliasResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateScheduledAuditRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateScheduledAuditResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateSecurityProfileRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateSecurityProfileResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const StreamFileFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateStreamRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateStreamResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateThingRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateThingResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateThingGroupRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateThingGroupResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const ThingTypePropertiesFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateThingTypeRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateThingTypeResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TopicRulePayloadFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateTopicRuleRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const HttpUrlDestinationConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const VpcDestinationConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TopicRuleDestinationConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateTopicRuleDestinationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const HttpUrlDestinationPropertiesFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const VpcDestinationPropertiesFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const TopicRuleDestinationFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const CreateTopicRuleDestinationResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteAccountAuditConfigurationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteAccountAuditConfigurationResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteAuditSuppressionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteAuditSuppressionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteAuthorizerRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteAuthorizerResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteBillingGroupRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteBillingGroupResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteCACertificateRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteCACertificateResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteCertificateRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteCustomMetricRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteCustomMetricResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteDimensionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteDimensionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteDomainConfigurationRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteDomainConfigurationResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteDynamicThingGroupRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteDynamicThingGroupResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteFleetMetricRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteJobRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteJobExecutionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteJobTemplateRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteMitigationActionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteMitigationActionResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteOTAUpdateRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeleteOTAUpdateResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
export const DeletePolicyRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
